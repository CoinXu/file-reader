/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\n__webpack_require__(17);\n\n__webpack_require__(24);\n\n__webpack_require__(25);\n\n__webpack_require__(27);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi90ZXN0L3Rlc3QuanM/ZjhiNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUtBOztBQUNBOztBQUNBOztBQUNBIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZWQgYnkgY29pbiBvbiAwNS8wMS8yMDE3LlxuICovXG5cbi8vIHBhcnNlclxuaW1wb3J0ICcuL21vY2hhL3BhcnNlci91Y3MyLnRlc3QnXG5pbXBvcnQgJy4vbW9jaGEvcGFyc2VyL3V0ZjgudGVzdCdcbmltcG9ydCAnLi9tb2NoYS9wYXJzZXIvYmFzZTY0LnRlc3QnXG5pbXBvcnQgJy4vbW9jaGEvcGFyc2VyL2Nzdi50ZXN0J1xuXG4vLyByZWFkZXJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3Rlc3QvdGVzdC5qcyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Created by coin on 06/01/2017.\n */\n\nvar CodeRange = function CodeRange(message) {\n  Error.call(this);\n  this.message = message || '编码范围错误:编码原始值正确范围是[0-255]';\n};\nCodeRange.prototype = Error.prototype;\n\nvar ContentFormat = function ContentFormat(message) {\n  Error.call(this);\n  this.message = message || '内容格式错误';\n};\nContentFormat.prototype = Error.prototype;\n\nvar NotImplemented = function NotImplemented(message) {\n  Error.call(this);\n  this.message = message || 'Not implement';\n};\nNotImplemented.prototype = Error.prototype;\n\nvar IllegalityStructure = function IllegalityStructure(message) {\n  Error.call(this);\n  this.message = message || 'The object of passed is illegality';\n};\nIllegalityStructure.prototype = Error.prototype;\n\nexports.CodeRange = CodeRange;\nexports.ContentFormat = ContentFormat;\nexports.NotImplemented = NotImplemented;\nexports.IllegalityStructure = IllegalityStructure;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZXhjZXB0aW9ucy5qcz83NzViIl0sIm5hbWVzIjpbIkNvZGVSYW5nZSIsIm1lc3NhZ2UiLCJFcnJvciIsImNhbGwiLCJwcm90b3R5cGUiLCJDb250ZW50Rm9ybWF0IiwiTm90SW1wbGVtZW50ZWQiLCJJbGxlZ2FsaXR5U3RydWN0dXJlIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7O0FBSUEsSUFBTUEsWUFBWSxTQUFaQSxTQUFZLENBQVVDLE9BQVYsRUFBbUI7QUFDbkNDLFFBQU1DLElBQU4sQ0FBVyxJQUFYO0FBQ0EsT0FBS0YsT0FBTCxHQUFlQSxXQUFXLDBCQUExQjtBQUNELENBSEQ7QUFJQUQsVUFBVUksU0FBVixHQUFzQkYsTUFBTUUsU0FBNUI7O0FBRUEsSUFBTUMsZ0JBQWdCLFNBQWhCQSxhQUFnQixDQUFVSixPQUFWLEVBQW1CO0FBQ3ZDQyxRQUFNQyxJQUFOLENBQVcsSUFBWDtBQUNBLE9BQUtGLE9BQUwsR0FBZUEsV0FBVyxRQUExQjtBQUNELENBSEQ7QUFJQUksY0FBY0QsU0FBZCxHQUEwQkYsTUFBTUUsU0FBaEM7O0FBRUEsSUFBTUUsaUJBQWlCLFNBQWpCQSxjQUFpQixDQUFVTCxPQUFWLEVBQW1CO0FBQ3hDQyxRQUFNQyxJQUFOLENBQVcsSUFBWDtBQUNBLE9BQUtGLE9BQUwsR0FBZUEsV0FBVyxlQUExQjtBQUNELENBSEQ7QUFJQUssZUFBZUYsU0FBZixHQUEyQkYsTUFBTUUsU0FBakM7O0FBRUEsSUFBTUcsc0JBQXNCLFNBQXRCQSxtQkFBc0IsQ0FBVU4sT0FBVixFQUFtQjtBQUM3Q0MsUUFBTUMsSUFBTixDQUFXLElBQVg7QUFDQSxPQUFLRixPQUFMLEdBQWVBLFdBQVcsb0NBQTFCO0FBQ0QsQ0FIRDtBQUlBTSxvQkFBb0JILFNBQXBCLEdBQWdDRixNQUFNRSxTQUF0Qzs7UUFHRUosUyxHQUFBQSxTO1FBQ0FLLGEsR0FBQUEsYTtRQUNBQyxjLEdBQUFBLGM7UUFDQUMsbUIsR0FBQUEsbUIiLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlZCBieSBjb2luIG9uIDA2LzAxLzIwMTcuXG4gKi9cblxuY29uc3QgQ29kZVJhbmdlID0gZnVuY3Rpb24gKG1lc3NhZ2UpIHtcbiAgRXJyb3IuY2FsbCh0aGlzKVxuICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlIHx8ICfnvJbnoIHojIPlm7TplJnor68657yW56CB5Y6f5aeL5YC85q2j56Gu6IyD5Zu05pivWzAtMjU1XSdcbn1cbkNvZGVSYW5nZS5wcm90b3R5cGUgPSBFcnJvci5wcm90b3R5cGVcblxuY29uc3QgQ29udGVudEZvcm1hdCA9IGZ1bmN0aW9uIChtZXNzYWdlKSB7XG4gIEVycm9yLmNhbGwodGhpcylcbiAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZSB8fCAn5YaF5a655qC85byP6ZSZ6K+vJ1xufVxuQ29udGVudEZvcm1hdC5wcm90b3R5cGUgPSBFcnJvci5wcm90b3R5cGVcblxuY29uc3QgTm90SW1wbGVtZW50ZWQgPSBmdW5jdGlvbiAobWVzc2FnZSkge1xuICBFcnJvci5jYWxsKHRoaXMpXG4gIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2UgfHwgJ05vdCBpbXBsZW1lbnQnXG59XG5Ob3RJbXBsZW1lbnRlZC5wcm90b3R5cGUgPSBFcnJvci5wcm90b3R5cGVcblxuY29uc3QgSWxsZWdhbGl0eVN0cnVjdHVyZSA9IGZ1bmN0aW9uIChtZXNzYWdlKSB7XG4gIEVycm9yLmNhbGwodGhpcylcbiAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZSB8fCAnVGhlIG9iamVjdCBvZiBwYXNzZWQgaXMgaWxsZWdhbGl0eSdcbn1cbklsbGVnYWxpdHlTdHJ1Y3R1cmUucHJvdG90eXBlID0gRXJyb3IucHJvdG90eXBlXG5cbmV4cG9ydCB7XG4gIENvZGVSYW5nZSxcbiAgQ29udGVudEZvcm1hdCxcbiAgTm90SW1wbGVtZW50ZWQsXG4gIElsbGVnYWxpdHlTdHJ1Y3R1cmVcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvZXhjZXB0aW9ucy5qcyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 5 */
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Created by coin on 18/12/2016.\n */\n\nvar str = 'abcdefghijklmnopqrstuvwxyz';\nvar str_len = str.length;\nvar MAX_NUMBER = 1 << 30;\n\nvar random = function random(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n};\n\nvar random_str = function random_str(total) {\n  var list = [];\n  var i = 0;\n  var cur = void 0;\n\n  for (; i < total; i++) {\n    cur = str[random(0, str_len)];\n    list[i] = random(0, 10) > 5 ? cur.toUpperCase() : cur;\n  }\n\n  return list.join('');\n};\n\nvar gen_short_id = function gen_short_id(pre_fix_len) {\n  pre_fix_len = pre_fix_len || 16;\n  var pre_fix = random_str(pre_fix_len);\n  var count = 0;\n  return function () {\n    if (count > MAX_NUMBER) {\n      pre_fix = random_str(pre_fix_len);\n      count = 0;\n    }\n    return pre_fix + '_' + count++;\n  };\n};\n\nvar short_id = gen_short_id();\nvar toString = Object.prototype.toString;\nvar classesFunction = '[object Function]';\n\nvar isFunction = function isFunction(any) {\n  return toString.call(any) === classesFunction;\n};\n\nvar identify = function identify(v) {\n  return v;\n};\n\nvar noop = function noop() {};\n\nvar inherits = function inherits(child, parent) {\n  function __() {\n    this.constructor = child;\n  }\n\n  __.prototype = parent.prototype;\n  child.prototype = new __();\n};\n\nvar arrayLikeToArray = function arrayLikeToArray(arrayLike) {\n  return Array.prototype.slice.call(arrayLike);\n};\nvar typeArrayToArray = function typeArrayToArray(array) {\n  return array.reduce(function (p, c) {\n    return p.concat(c);\n  }, []);\n};\n\nexports.random = random;\nexports.short_id = short_id;\nexports.gen_short_id = gen_short_id;\nexports.isFunction = isFunction;\nexports.identify = identify;\nexports.noop = noop;\nexports.inherits = inherits;\nexports.arrayLikeToArray = arrayLikeToArray;\nexports.typeArrayToArray = typeArrayToArray;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdXRpbC91dGlsLmpzP2NhZGUiXSwibmFtZXMiOlsic3RyIiwic3RyX2xlbiIsImxlbmd0aCIsIk1BWF9OVU1CRVIiLCJyYW5kb20iLCJtaW4iLCJtYXgiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb21fc3RyIiwidG90YWwiLCJsaXN0IiwiaSIsImN1ciIsInRvVXBwZXJDYXNlIiwiam9pbiIsImdlbl9zaG9ydF9pZCIsInByZV9maXhfbGVuIiwicHJlX2ZpeCIsImNvdW50Iiwic2hvcnRfaWQiLCJ0b1N0cmluZyIsIk9iamVjdCIsInByb3RvdHlwZSIsImNsYXNzZXNGdW5jdGlvbiIsImlzRnVuY3Rpb24iLCJhbnkiLCJjYWxsIiwiaWRlbnRpZnkiLCJ2Iiwibm9vcCIsImluaGVyaXRzIiwiY2hpbGQiLCJwYXJlbnQiLCJfXyIsImNvbnN0cnVjdG9yIiwiYXJyYXlMaWtlVG9BcnJheSIsImFycmF5TGlrZSIsIkFycmF5Iiwic2xpY2UiLCJ0eXBlQXJyYXlUb0FycmF5IiwiYXJyYXkiLCJyZWR1Y2UiLCJwIiwiYyIsImNvbmNhdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7OztBQUlBLElBQU1BLE1BQU0sNEJBQVo7QUFDQSxJQUFNQyxVQUFVRCxJQUFJRSxNQUFwQjtBQUNBLElBQU1DLGFBQWEsS0FBSyxFQUF4Qjs7QUFFQSxJQUFNQyxTQUFTLFNBQVRBLE1BQVMsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDM0IsU0FBT0MsS0FBS0MsS0FBTCxDQUFXRCxLQUFLSCxNQUFMLE1BQWlCRSxNQUFNRCxHQUF2QixJQUE4QkEsR0FBekMsQ0FBUDtBQUNELENBRkQ7O0FBSUEsSUFBTUksYUFBYSxTQUFiQSxVQUFhLENBQUNDLEtBQUQsRUFBVztBQUM1QixNQUFNQyxPQUFPLEVBQWI7QUFDQSxNQUFJQyxJQUFJLENBQVI7QUFDQSxNQUFJQyxZQUFKOztBQUVBLFNBQU9ELElBQUlGLEtBQVgsRUFBa0JFLEdBQWxCLEVBQXVCO0FBQ3JCQyxVQUFNYixJQUFJSSxPQUFPLENBQVAsRUFBVUgsT0FBVixDQUFKLENBQU47QUFDQVUsU0FBS0MsQ0FBTCxJQUFVUixPQUFPLENBQVAsRUFBVSxFQUFWLElBQWdCLENBQWhCLEdBQW9CUyxJQUFJQyxXQUFKLEVBQXBCLEdBQXdDRCxHQUFsRDtBQUNEOztBQUVELFNBQU9GLEtBQUtJLElBQUwsQ0FBVSxFQUFWLENBQVA7QUFDRCxDQVhEOztBQWFBLElBQU1DLGVBQWUsU0FBZkEsWUFBZSxDQUFDQyxXQUFELEVBQWlCO0FBQ3BDQSxnQkFBY0EsZUFBZSxFQUE3QjtBQUNBLE1BQUlDLFVBQVVULFdBQVdRLFdBQVgsQ0FBZDtBQUNBLE1BQUlFLFFBQVEsQ0FBWjtBQUNBLFNBQU8sWUFBTTtBQUNYLFFBQUlBLFFBQVFoQixVQUFaLEVBQXdCO0FBQ3RCZSxnQkFBVVQsV0FBV1EsV0FBWCxDQUFWO0FBQ0FFLGNBQVEsQ0FBUjtBQUNEO0FBQ0QsV0FBVUQsT0FBVixTQUFxQkMsT0FBckI7QUFDRCxHQU5EO0FBT0QsQ0FYRDs7QUFhQSxJQUFNQyxXQUFXSixjQUFqQjtBQUNBLElBQU1LLFdBQVdDLE9BQU9DLFNBQVAsQ0FBaUJGLFFBQWxDO0FBQ0EsSUFBTUcsa0JBQWtCLG1CQUF4Qjs7QUFFQSxJQUFNQyxhQUFhLFNBQWJBLFVBQWEsQ0FBQ0MsR0FBRCxFQUFTO0FBQzFCLFNBQU9MLFNBQVNNLElBQVQsQ0FBY0QsR0FBZCxNQUF1QkYsZUFBOUI7QUFDRCxDQUZEOztBQUlBLElBQU1JLFdBQVcsU0FBWEEsUUFBVyxDQUFDQyxDQUFEO0FBQUEsU0FBT0EsQ0FBUDtBQUFBLENBQWpCOztBQUVBLElBQU1DLE9BQU8sU0FBUEEsSUFBTyxHQUFNLENBQUUsQ0FBckI7O0FBRUEsSUFBTUMsV0FBVyxTQUFYQSxRQUFXLENBQVVDLEtBQVYsRUFBaUJDLE1BQWpCLEVBQXlCO0FBQ3hDLFdBQVNDLEVBQVQsR0FBZTtBQUFFLFNBQUtDLFdBQUwsR0FBbUJILEtBQW5CO0FBQTJCOztBQUU1Q0UsS0FBR1gsU0FBSCxHQUFlVSxPQUFPVixTQUF0QjtBQUNBUyxRQUFNVCxTQUFOLEdBQWtCLElBQUlXLEVBQUosRUFBbEI7QUFDRCxDQUxEOztBQU9BLElBQU1FLG1CQUFtQixTQUFuQkEsZ0JBQW1CLENBQUNDLFNBQUQ7QUFBQSxTQUFlQyxNQUFNZixTQUFOLENBQWdCZ0IsS0FBaEIsQ0FBc0JaLElBQXRCLENBQTJCVSxTQUEzQixDQUFmO0FBQUEsQ0FBekI7QUFDQSxJQUFNRyxtQkFBbUIsU0FBbkJBLGdCQUFtQixDQUFDQyxLQUFEO0FBQUEsU0FBV0EsTUFBTUMsTUFBTixDQUFhLFVBQUNDLENBQUQsRUFBSUMsQ0FBSjtBQUFBLFdBQVVELEVBQUVFLE1BQUYsQ0FBU0QsQ0FBVCxDQUFWO0FBQUEsR0FBYixFQUFvQyxFQUFwQyxDQUFYO0FBQUEsQ0FBekI7O1FBR0V4QyxNLEdBQUFBLE07UUFDQWdCLFEsR0FBQUEsUTtRQUNBSixZLEdBQUFBLFk7UUFDQVMsVSxHQUFBQSxVO1FBQ0FHLFEsR0FBQUEsUTtRQUNBRSxJLEdBQUFBLEk7UUFDQUMsUSxHQUFBQSxRO1FBQ0FLLGdCLEdBQUFBLGdCO1FBQ0FJLGdCLEdBQUFBLGdCIiwiZmlsZSI6IjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZWQgYnkgY29pbiBvbiAxOC8xMi8yMDE2LlxuICovXG5cbmNvbnN0IHN0ciA9ICdhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5eidcbmNvbnN0IHN0cl9sZW4gPSBzdHIubGVuZ3RoXG5jb25zdCBNQVhfTlVNQkVSID0gMSA8PCAzMFxuXG5jb25zdCByYW5kb20gPSAobWluLCBtYXgpID0+IHtcbiAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4pICsgbWluKVxufVxuXG5jb25zdCByYW5kb21fc3RyID0gKHRvdGFsKSA9PiB7XG4gIGNvbnN0IGxpc3QgPSBbXVxuICBsZXQgaSA9IDBcbiAgbGV0IGN1clxuICBcbiAgZm9yICg7IGkgPCB0b3RhbDsgaSsrKSB7XG4gICAgY3VyID0gc3RyW3JhbmRvbSgwLCBzdHJfbGVuKV1cbiAgICBsaXN0W2ldID0gcmFuZG9tKDAsIDEwKSA+IDUgPyBjdXIudG9VcHBlckNhc2UoKSA6IGN1clxuICB9XG4gIFxuICByZXR1cm4gbGlzdC5qb2luKCcnKVxufVxuXG5jb25zdCBnZW5fc2hvcnRfaWQgPSAocHJlX2ZpeF9sZW4pID0+IHtcbiAgcHJlX2ZpeF9sZW4gPSBwcmVfZml4X2xlbiB8fCAxNlxuICBsZXQgcHJlX2ZpeCA9IHJhbmRvbV9zdHIocHJlX2ZpeF9sZW4pXG4gIGxldCBjb3VudCA9IDBcbiAgcmV0dXJuICgpID0+IHtcbiAgICBpZiAoY291bnQgPiBNQVhfTlVNQkVSKSB7XG4gICAgICBwcmVfZml4ID0gcmFuZG9tX3N0cihwcmVfZml4X2xlbilcbiAgICAgIGNvdW50ID0gMFxuICAgIH1cbiAgICByZXR1cm4gYCR7cHJlX2ZpeH1fJHtjb3VudCsrfWBcbiAgfVxufVxuXG5jb25zdCBzaG9ydF9pZCA9IGdlbl9zaG9ydF9pZCgpXG5jb25zdCB0b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmdcbmNvbnN0IGNsYXNzZXNGdW5jdGlvbiA9ICdbb2JqZWN0IEZ1bmN0aW9uXSdcblxuY29uc3QgaXNGdW5jdGlvbiA9IChhbnkpID0+IHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwoYW55KSA9PT0gY2xhc3Nlc0Z1bmN0aW9uXG59XG5cbmNvbnN0IGlkZW50aWZ5ID0gKHYpID0+IHZcblxuY29uc3Qgbm9vcCA9ICgpID0+IHt9XG5cbmNvbnN0IGluaGVyaXRzID0gZnVuY3Rpb24gKGNoaWxkLCBwYXJlbnQpIHtcbiAgZnVuY3Rpb24gX18gKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gY2hpbGQ7IH1cbiAgXG4gIF9fLnByb3RvdHlwZSA9IHBhcmVudC5wcm90b3R5cGU7XG4gIGNoaWxkLnByb3RvdHlwZSA9IG5ldyBfXygpO1xufVxuXG5jb25zdCBhcnJheUxpa2VUb0FycmF5ID0gKGFycmF5TGlrZSkgPT4gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJyYXlMaWtlKVxuY29uc3QgdHlwZUFycmF5VG9BcnJheSA9IChhcnJheSkgPT4gYXJyYXkucmVkdWNlKChwLCBjKSA9PiBwLmNvbmNhdChjKSwgW10pXG5cbmV4cG9ydCB7XG4gIHJhbmRvbSxcbiAgc2hvcnRfaWQsXG4gIGdlbl9zaG9ydF9pZCxcbiAgaXNGdW5jdGlvbixcbiAgaWRlbnRpZnksXG4gIG5vb3AsXG4gIGluaGVyaXRzLFxuICBhcnJheUxpa2VUb0FycmF5LFxuICB0eXBlQXJyYXlUb0FycmF5XG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL3V0aWwvdXRpbC5qcyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 6 */,
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CSVParser = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nreated by coin on 05/01/2017.\nn\nvar _exceptions = __webpack_require__(4);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar COMMA = 0x2C; // ,\nvar QUOTATION = 0x22; // \"\n\nvar CSVParser = exports.CSVParser = function () {\n\n  /**\n   * @param {number} [separator] separated of content\n   * @param {number} [quotation] mark of content quotes\n   */\n  function CSVParser(separator, quotation) {\n    _classCallCheck(this, CSVParser);\n\n    this.separator = separator || COMMA;\n    this.quotation = quotation || QUOTATION;\n  }\n\n  /**\n   * 解析csv单行,以`,`作为分隔判断,支持 `a, \"b,c\", d` 这样的格式\n   * @param {Uint8Array} array\n   * @return {Array<Uint8Array>}\n   *\n   * @example\n   * ```JavaScript\n   * parse_line([110,97,109,101,45,48,44,110,97,109,101,45,49])\n   * // output\n   * [\n   *   [110,97,109,101,45,48],\n   *   [110,97,109,101,45,49]\n   * ]\n   * ```\n   */\n\n\n  _createClass(CSVParser, [{\n    key: 'parse_line',\n    value: function parse_line(array) {\n      var separator = this.separator;\n      var quotation = this.quotation;\n      var length = array.byteLength;\n      var result = [];\n      var point = 0,\n          next = void 0,\n          code = void 0,\n          start = void 0,\n          end = void 0;\n\n      while (point < length) {\n        code = array[point];\n        next = point + 1;\n\n        // `a,\"first,second\",b` => [\"a\", \"first,second\", \"b]\n        if (code === quotation) {\n          start = next;\n          end = array.indexOf(quotation, next);\n\n          if (end === -1) {\n            throw new _exceptions.ContentFormat('数据格式错误: ' + String.fromCodePoint.apply(String, array));\n          }\n\n          next = end + 2;\n        }\n\n        // ,,, => ['','','',]\n        else if (code === separator) {\n            start = end = point;\n            next = end + 1;\n          }\n          // first,second => [\"first\", \"second\"]\n          else {\n              start = point;\n              end = array.indexOf(separator, next);\n              if (end === -1) {\n                end = length;\n              }\n              next = end + 1;\n            }\n\n        result.push(array.slice(start, end));\n        point = next;\n      }\n\n      if (code === separator) {\n        result.push(new Uint8Array(0));\n      }\n\n      return result;\n    }\n  }]);\n\n  return CSVParser;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcGFyc2VyL2Nzdi5qcz9jNTJiIl0sIm5hbWVzIjpbIkNPTU1BIiwiUVVPVEFUSU9OIiwiQ1NWUGFyc2VyIiwic2VwYXJhdG9yIiwicXVvdGF0aW9uIiwiYXJyYXkiLCJsZW5ndGgiLCJieXRlTGVuZ3RoIiwicmVzdWx0IiwicG9pbnQiLCJuZXh0IiwiY29kZSIsInN0YXJ0IiwiZW5kIiwiaW5kZXhPZiIsIlN0cmluZyIsImZyb21Db2RlUG9pbnQiLCJhcHBseSIsInB1c2giLCJzbGljZSIsIlVpbnQ4QXJyYXkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7cWpCQUFBOzs7O0FBSUE7Ozs7QUFDQSxJQUFNQSxRQUFRLElBQWQsQyxDQUE0QjtBQUM1QixJQUFNQyxZQUFZLElBQWxCLEMsQ0FBNEI7O0lBRWZDLFMsV0FBQUEsUzs7QUFFWDs7OztBQUlBLHFCQUFhQyxTQUFiLEVBQXdCQyxTQUF4QixFQUFtQztBQUFBOztBQUNqQyxTQUFLRCxTQUFMLEdBQWlCQSxhQUFhSCxLQUE5QjtBQUNBLFNBQUtJLFNBQUwsR0FBaUJBLGFBQWFILFNBQTlCO0FBQ0Q7O0FBRUQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0JBZVlJLEssRUFBTztBQUNqQixVQUFNRixZQUFZLEtBQUtBLFNBQXZCO0FBQ0EsVUFBTUMsWUFBWSxLQUFLQSxTQUF2QjtBQUNBLFVBQU1FLFNBQVNELE1BQU1FLFVBQXJCO0FBQ0EsVUFBTUMsU0FBUyxFQUFmO0FBQ0EsVUFBSUMsUUFBUSxDQUFaO0FBQUEsVUFBZUMsYUFBZjtBQUFBLFVBQXFCQyxhQUFyQjtBQUFBLFVBQTJCQyxjQUEzQjtBQUFBLFVBQWtDQyxZQUFsQzs7QUFFQSxhQUFPSixRQUFRSCxNQUFmLEVBQXVCO0FBQ3JCSyxlQUFPTixNQUFNSSxLQUFOLENBQVA7QUFDQUMsZUFBT0QsUUFBUSxDQUFmOztBQUVBO0FBQ0EsWUFBSUUsU0FBU1AsU0FBYixFQUF3QjtBQUN0QlEsa0JBQVFGLElBQVI7QUFDQUcsZ0JBQU1SLE1BQU1TLE9BQU4sQ0FBY1YsU0FBZCxFQUF5Qk0sSUFBekIsQ0FBTjs7QUFFQSxjQUFJRyxRQUFRLENBQUMsQ0FBYixFQUFnQjtBQUNkLGtCQUFNLDhCQUNKLGFBQ0VFLE9BQU9DLGFBQVAsQ0FBcUJDLEtBQXJCLENBQTJCRixNQUEzQixFQUFtQ1YsS0FBbkMsQ0FGRSxDQUFOO0FBSUQ7O0FBRURLLGlCQUFPRyxNQUFNLENBQWI7QUFDRDs7QUFFRDtBQWRBLGFBZUssSUFBSUYsU0FBU1IsU0FBYixFQUF3QjtBQUMzQlMsb0JBQVFDLE1BQU1KLEtBQWQ7QUFDQUMsbUJBQU9HLE1BQU0sQ0FBYjtBQUNEO0FBQ0Q7QUFKSyxlQUtBO0FBQ0hELHNCQUFRSCxLQUFSO0FBQ0FJLG9CQUFNUixNQUFNUyxPQUFOLENBQWNYLFNBQWQsRUFBeUJPLElBQXpCLENBQU47QUFDQSxrQkFBSUcsUUFBUSxDQUFDLENBQWIsRUFBZ0I7QUFDZEEsc0JBQU1QLE1BQU47QUFDRDtBQUNESSxxQkFBT0csTUFBTSxDQUFiO0FBQ0Q7O0FBRURMLGVBQU9VLElBQVAsQ0FBWWIsTUFBTWMsS0FBTixDQUFZUCxLQUFaLEVBQW1CQyxHQUFuQixDQUFaO0FBQ0FKLGdCQUFRQyxJQUFSO0FBQ0Q7O0FBRUQsVUFBR0MsU0FBU1IsU0FBWixFQUFzQjtBQUNwQkssZUFBT1UsSUFBUCxDQUFZLElBQUlFLFVBQUosQ0FBZSxDQUFmLENBQVo7QUFDRDs7QUFFRCxhQUFPWixNQUFQO0FBQ0QiLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZWQgYnkgY29pbiBvbiAwNS8wMS8yMDE3LlxuICovXG5cbmltcG9ydCB7IENvbnRlbnRGb3JtYXQgfSBmcm9tICcuLi9leGNlcHRpb25zJ1xuY29uc3QgQ09NTUEgPSAweDJDICAgICAgICAgIC8vICxcbmNvbnN0IFFVT1RBVElPTiA9IDB4MjIgICAgICAvLyBcIlxuXG5leHBvcnQgY2xhc3MgQ1NWUGFyc2VyIHtcbiAgXG4gIC8qKlxuICAgKiBAcGFyYW0ge251bWJlcn0gW3NlcGFyYXRvcl0gc2VwYXJhdGVkIG9mIGNvbnRlbnRcbiAgICogQHBhcmFtIHtudW1iZXJ9IFtxdW90YXRpb25dIG1hcmsgb2YgY29udGVudCBxdW90ZXNcbiAgICovXG4gIGNvbnN0cnVjdG9yIChzZXBhcmF0b3IsIHF1b3RhdGlvbikge1xuICAgIHRoaXMuc2VwYXJhdG9yID0gc2VwYXJhdG9yIHx8IENPTU1BXG4gICAgdGhpcy5xdW90YXRpb24gPSBxdW90YXRpb24gfHwgUVVPVEFUSU9OXG4gIH1cbiAgXG4gIC8qKlxuICAgKiDop6PmnpBjc3bljZXooYws5LulYCxg5L2c5Li65YiG6ZqU5Yik5patLOaUr+aMgSBgYSwgXCJiLGNcIiwgZGAg6L+Z5qC355qE5qC85byPXG4gICAqIEBwYXJhbSB7VWludDhBcnJheX0gYXJyYXlcbiAgICogQHJldHVybiB7QXJyYXk8VWludDhBcnJheT59XG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYEphdmFTY3JpcHRcbiAgICogcGFyc2VfbGluZShbMTEwLDk3LDEwOSwxMDEsNDUsNDgsNDQsMTEwLDk3LDEwOSwxMDEsNDUsNDldKVxuICAgKiAvLyBvdXRwdXRcbiAgICogW1xuICAgKiAgIFsxMTAsOTcsMTA5LDEwMSw0NSw0OF0sXG4gICAqICAgWzExMCw5NywxMDksMTAxLDQ1LDQ5XVxuICAgKiBdXG4gICAqIGBgYFxuICAgKi9cbiAgcGFyc2VfbGluZSAoYXJyYXkpIHtcbiAgICBjb25zdCBzZXBhcmF0b3IgPSB0aGlzLnNlcGFyYXRvclxuICAgIGNvbnN0IHF1b3RhdGlvbiA9IHRoaXMucXVvdGF0aW9uXG4gICAgY29uc3QgbGVuZ3RoID0gYXJyYXkuYnl0ZUxlbmd0aFxuICAgIGNvbnN0IHJlc3VsdCA9IFtdXG4gICAgbGV0IHBvaW50ID0gMCwgbmV4dCwgY29kZSwgc3RhcnQsIGVuZFxuICAgIFxuICAgIHdoaWxlIChwb2ludCA8IGxlbmd0aCkge1xuICAgICAgY29kZSA9IGFycmF5W3BvaW50XVxuICAgICAgbmV4dCA9IHBvaW50ICsgMVxuICAgICAgXG4gICAgICAvLyBgYSxcImZpcnN0LHNlY29uZFwiLGJgID0+IFtcImFcIiwgXCJmaXJzdCxzZWNvbmRcIiwgXCJiXVxuICAgICAgaWYgKGNvZGUgPT09IHF1b3RhdGlvbikge1xuICAgICAgICBzdGFydCA9IG5leHRcbiAgICAgICAgZW5kID0gYXJyYXkuaW5kZXhPZihxdW90YXRpb24sIG5leHQpXG4gICAgICAgIFxuICAgICAgICBpZiAoZW5kID09PSAtMSkge1xuICAgICAgICAgIHRocm93IG5ldyBDb250ZW50Rm9ybWF0KFxuICAgICAgICAgICAgJ+aVsOaNruagvOW8j+mUmeivrzogJ1xuICAgICAgICAgICAgKyBTdHJpbmcuZnJvbUNvZGVQb2ludC5hcHBseShTdHJpbmcsIGFycmF5KVxuICAgICAgICAgIClcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgbmV4dCA9IGVuZCArIDJcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gLCwsID0+IFsnJywnJywnJyxdXG4gICAgICBlbHNlIGlmIChjb2RlID09PSBzZXBhcmF0b3IpIHtcbiAgICAgICAgc3RhcnQgPSBlbmQgPSBwb2ludFxuICAgICAgICBuZXh0ID0gZW5kICsgMVxuICAgICAgfVxuICAgICAgLy8gZmlyc3Qsc2Vjb25kID0+IFtcImZpcnN0XCIsIFwic2Vjb25kXCJdXG4gICAgICBlbHNlIHtcbiAgICAgICAgc3RhcnQgPSBwb2ludFxuICAgICAgICBlbmQgPSBhcnJheS5pbmRleE9mKHNlcGFyYXRvciwgbmV4dClcbiAgICAgICAgaWYgKGVuZCA9PT0gLTEpIHtcbiAgICAgICAgICBlbmQgPSBsZW5ndGhcbiAgICAgICAgfVxuICAgICAgICBuZXh0ID0gZW5kICsgMVxuICAgICAgfVxuICAgICAgXG4gICAgICByZXN1bHQucHVzaChhcnJheS5zbGljZShzdGFydCwgZW5kKSlcbiAgICAgIHBvaW50ID0gbmV4dFxuICAgIH1cbiAgXG4gICAgaWYoY29kZSA9PT0gc2VwYXJhdG9yKXtcbiAgICAgIHJlc3VsdC5wdXNoKG5ldyBVaW50OEFycmF5KDApKVxuICAgIH1cbiAgICBcbiAgICByZXR1cm4gcmVzdWx0XG4gIH1cbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvcGFyc2VyL2Nzdi5qcyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UTF8Parser = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nreated by coin on 21/12/2016.\nn\nvar _ucs = __webpack_require__(12);\n\nvar _dynamicUint8array = __webpack_require__(13);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar BYTE_RANGE = {\n  1: [0x0000, 0x007F],\n  2: [0x0080, 0x07FF],\n  3: [0x0800, 0xFFFF],\n  4: [0x10000, 0x1FFFFF],\n  5: [0x200000, 0x3FFFFFF],\n  6: [0x4000000, 0x7FFFFFFF]\n};\n\nvar BYTES_AND_BASE = [0, // 0000000000\n1, // 0b00000001\n3, // 0b00000011\n7, // 0b00000111\n15, // 0b00001111\n31, // 0b00011111\n63, // 0b00111111\n127, // 0b01111111\n255 // 0b11111111\n];\n\n/**\n * 解析utf8编码文件,以免切片时将同字符的不同字节拆分到不同的片上\n */\n\nvar UTF8Parser = exports.UTF8Parser = function () {\n  function UTF8Parser() {\n    _classCallCheck(this, UTF8Parser);\n\n    this.prev_buffer = null;\n    this.bytes = 0;\n    this.utf8_bom = [0x00ef, 0x00bb, 0x00bf];\n    this.parser = new _ucs.UCS2Parer();\n  }\n\n  /**\n   * TODO 区分对待有无 `onParse` 两种情况\n   * @param {Uint8Array} arr\n   * @param {Function} on_parse\n   */\n\n\n  _createClass(UTF8Parser, [{\n    key: 'parse',\n    value: function parse(arr) {\n      var length = arr.byteLength;\n      var get_point = UTF8Parser.get_point;\n      var character = [];\n      var character_count = 0;\n      var byteLength = 0;\n\n      var point = 0;\n      var end_increment = 1;\n      var cur = void 0,\n          bytes = void 0,\n          byte_start = void 0,\n          byte_end = void 0,\n          bytes_count = void 0;\n\n      while (point < length) {\n        cur = arr[point];\n\n        // 在utf8中\n        // 127(0b01111111) ~ 160(0b10100000) 全是空的\n        // 所以如果出现这样的字符,理论上应该抛出错误\n        // 但是为了速度起见,忽略错误检查\n\n        // 128 === 0b10000000\n        if (cur < 128) {\n          end_increment = 1;\n        }\n        // 192 === 0b11000000\n        else if (cur < 192) {\n            end_increment = 1;\n          }\n          // 224 === 0b11100000\n          else if (cur < 224) {\n              end_increment = 2;\n            }\n            // 240 === 0b11110000\n            else if (cur < 240) {\n                end_increment = 3;\n              }\n              // 248 === 0b11111000\n              else if (cur < 248) {\n                  end_increment = 4;\n                }\n                // 252 === 0b11111100\n                else if (cur < 252) {\n                    end_increment = 5;\n                  }\n\n        byte_start = point;\n        byte_end = point + end_increment;\n\n        if (byte_end > length) {\n          break;\n        }\n\n        if (end_increment === 1) {\n          character[character_count++] = cur;\n          byteLength += 1;\n        } else {\n          bytes = [];\n          bytes_count = 0;\n\n          while (byte_start < byte_end) {\n            bytes[bytes_count++] = arr[byte_start++];\n          }\n\n          character[character_count++] = get_point(bytes, bytes_count);\n          byteLength += bytes_count;\n        }\n        point = byte_end;\n      }\n\n      this.prev_buffer = point === length ? null : arr.slice(point);\n      this.bytes = this.bytes + length;\n      return { character: character, byteLength: byteLength };\n    }\n  }, {\n    key: 'entry',\n    value: function entry(buf) {\n      var arr = void 0;\n      var prev_buffer = this.prev_buffer;\n\n\n      if (prev_buffer !== null) {\n        var prev_len = prev_buffer.byteLength;\n        var buf_len = buf.byteLength;\n        var cur = new Uint8Array(buf);\n        var buffer = new ArrayBuffer(prev_len + buf_len);\n\n        arr = new Uint8Array(buffer);\n        arr.set(prev_buffer, 0);\n        arr.set(cur, prev_len);\n\n        this.prev_buffer = null;\n      } else {\n        arr = new Uint8Array(buf);\n      }\n\n      // 剔除BOM\n      // utf8的BOM为 [0x00ef, 0x00bb, 0x00bf]\n      // 只出现在文档最前\n      var utf8_bom = this.utf8_bom;\n      var len_bom = utf8_bom.length;\n\n      if (this.bytes < len_bom) {\n        var result = this.filterOutBOM(arr);\n        arr = result.array;\n        this.bytes = result.point;\n      }\n\n      return arr.byteLength > 0 ? this.parse(arr) : this;\n    }\n\n    /**\n     * @param {Uint8Array} buf\n     * @return {{point: number, array: Uint8Array}}\n     */\n\n  }, {\n    key: 'filterOutBOM',\n    value: function filterOutBOM(buf) {\n      // 剔除BOM\n      // utf8的BOM为 [0x00ef, 0x00bb, 0x00bf]\n      // 只出现在文档最前\n      var utf8_bom = this.utf8_bom;\n      var len_bom = utf8_bom.length;\n      var length = buf.byteLength;\n\n      var start = this.bytes;\n      var index = 0;\n\n      if (start < len_bom) {\n        while (start < len_bom && index < length) {\n          if (buf[index] === utf8_bom[start]) {\n            index++;\n            start++;\n          } else {\n            break;\n          }\n        }\n        buf = buf.slice(index);\n      }\n\n      return {\n        point: start,\n        array: buf\n      };\n    }\n  }, {\n    key: 'done',\n    value: function done() {\n      return this.prev_buffer === null;\n    }\n\n    /**\n     * @static\n     * @param bytes\n     * @param len - bytes.length\n     * @returns {number}\n     */\n\n  }], [{\n    key: 'get_point',\n    value: function get_point(bytes, len) {\n\n      var First = bytes[0];\n      var Remain = bytes.slice(1);\n      var Remain_len = len - 1;\n      var Base = BYTES_AND_BASE[6];\n\n      // 保留后 (8 - len) 位\n      var code_point = (First & BYTES_AND_BASE[8 - len]) << Remain_len * 6;\n\n      // 后面的保留后6位\n      for (var i = 0; i < Remain_len; i++) {\n        code_point = code_point + ((Remain[i] & Base) << (Remain_len - i - 1) * 6);\n      }\n\n      return code_point;\n    }\n\n    /**\n     * unicode => utf8\n     * @static\n     * @param {Array<number>} array\n     * @return {Uint8Array}\n     */\n\n  }, {\n    key: 'unicode_to_utf8_uint8',\n    value: function unicode_to_utf8_uint8(array) {\n      var length = array.length;\n      var result = (0, _dynamicUint8array.dynamic_uint8_array)(length * 2);\n\n      var code = void 0,\n          point = 0;\n\n      // 192 => 0b11000000\n      // 128 => 0b10000000\n      // 63 => 0b111111\n      // 224 => 0b11100000\n      // 240 => 0b11110000\n      // 248 => 0b11111000\n\n      while (point < length) {\n        code = array[point++];\n        // 1 byte\n        if (code < 0x0080) {\n          result.push([code]);\n        }\n        // 2 byte, 16 bit\n        else if (code < 0x0800) {\n            result.push([192 | code >> 6, 128 | code & 63]);\n          }\n          // 3 byte\n          else if (code < 0x10000) {\n              result.push([224 | code >> 12, 128 | code >> 6 & 63, 128 | code & 63]);\n            }\n            // 4 byte\n            else if (code < 0x200000) {\n                result.push([240 | code >> 18, 128 | code >> 12 & 63, 128 | code >> 6 & 63, 128 | code & 63]);\n              }\n              // 5 byte\n              else if (code < 0x4000000) {\n                  result.push([248 | code >> 24, 128 | code >> 18 & 63, 128 | code >> 12 & 63, 128 | code >> 6 & 63, 128 | code & 63]);\n                }\n      }\n\n      return result.get();\n    }\n\n    /**\n     * @static\n     * @param {string} string\n     * @return {Uint8Array}\n     */\n\n  }, {\n    key: 'string_to_utf8_uint8',\n    value: function string_to_utf8_uint8(string) {\n      return UTF8Parser.unicode_to_utf8_uint8(_ucs.UCS2Parer.decode(string));\n    }\n  }]);\n\n  return UTF8Parser;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 12 */
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Created by coin on 05/01/2017.\n */\n\n/**\n * TODO 改写为Uint8Array实现\n */\n\nvar stringFromCharCode = String.fromCharCode;\n\nvar UCS2Parer = exports.UCS2Parer = function () {\n  function UCS2Parer() {\n    _classCallCheck(this, UCS2Parer);\n  }\n\n  _createClass(UCS2Parer, null, [{\n    key: 'decode',\n    value: function decode(str) {\n      var output = [];\n      var counter = 0;\n      var length = str.length;\n      var value = void 0;\n      var extra = void 0;\n      while (counter < length) {\n        value = str.charCodeAt(counter++);\n        if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n          // high surrogate, and there is a next character\n          extra = str.charCodeAt(counter++);\n          if ((extra & 0xFC00) == 0xDC00) {\n            // low surrogate\n            output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n          } else {\n            // unmatched surrogate only append this code unit, in case the next\n            // code unit is the high surrogate of a surrogate pair\n            output.push(value);\n            counter--;\n          }\n        } else {\n          output.push(value);\n        }\n      }\n      return output;\n    }\n  }, {\n    key: 'encode',\n    value: function encode(array) {\n      var length = array.length;\n      var index = -1;\n      var value = void 0;\n      var output = '';\n      while (++index < length) {\n        value = array[index];\n        if (value > 0xFFFF) {\n          value -= 0x10000;\n          output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n          value = 0xDC00 | value & 0x3FF;\n        }\n        output += stringFromCharCode(value);\n      }\n      return output;\n    }\n  }]);\n\n  return UCS2Parer;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcGFyc2VyL3VjczIuanM/MDVlMCJdLCJuYW1lcyI6WyJzdHJpbmdGcm9tQ2hhckNvZGUiLCJTdHJpbmciLCJmcm9tQ2hhckNvZGUiLCJVQ1MyUGFyZXIiLCJzdHIiLCJvdXRwdXQiLCJjb3VudGVyIiwibGVuZ3RoIiwidmFsdWUiLCJleHRyYSIsImNoYXJDb2RlQXQiLCJwdXNoIiwiYXJyYXkiLCJpbmRleCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBOzs7O0FBSUE7Ozs7QUFJQSxJQUFNQSxxQkFBcUJDLE9BQU9DLFlBQWxDOztJQUNhQyxTLFdBQUFBLFM7Ozs7Ozs7MkJBQ0lDLEcsRUFBSztBQUNsQixVQUFNQyxTQUFTLEVBQWY7QUFDQSxVQUFJQyxVQUFVLENBQWQ7QUFDQSxVQUFNQyxTQUFTSCxJQUFJRyxNQUFuQjtBQUNBLFVBQUlDLGNBQUo7QUFDQSxVQUFJQyxjQUFKO0FBQ0EsYUFBT0gsVUFBVUMsTUFBakIsRUFBeUI7QUFDdkJDLGdCQUFRSixJQUFJTSxVQUFKLENBQWVKLFNBQWYsQ0FBUjtBQUNBLFlBQUlFLFNBQVMsTUFBVCxJQUFtQkEsU0FBUyxNQUE1QixJQUFzQ0YsVUFBVUMsTUFBcEQsRUFBNEQ7QUFDMUQ7QUFDQUUsa0JBQVFMLElBQUlNLFVBQUosQ0FBZUosU0FBZixDQUFSO0FBQ0EsY0FBSSxDQUFDRyxRQUFRLE1BQVQsS0FBb0IsTUFBeEIsRUFBZ0M7QUFBRTtBQUNoQ0osbUJBQU9NLElBQVAsQ0FBWSxDQUFDLENBQUNILFFBQVEsS0FBVCxLQUFtQixFQUFwQixLQUEyQkMsUUFBUSxLQUFuQyxJQUE0QyxPQUF4RDtBQUNELFdBRkQsTUFFTztBQUNMO0FBQ0E7QUFDQUosbUJBQU9NLElBQVAsQ0FBWUgsS0FBWjtBQUNBRjtBQUNEO0FBQ0YsU0FYRCxNQVdPO0FBQ0xELGlCQUFPTSxJQUFQLENBQVlILEtBQVo7QUFDRDtBQUNGO0FBQ0QsYUFBT0gsTUFBUDtBQUNEOzs7MkJBRWNPLEssRUFBTztBQUNwQixVQUFNTCxTQUFTSyxNQUFNTCxNQUFyQjtBQUNBLFVBQUlNLFFBQVEsQ0FBQyxDQUFiO0FBQ0EsVUFBSUwsY0FBSjtBQUNBLFVBQUlILFNBQVMsRUFBYjtBQUNBLGFBQU8sRUFBRVEsS0FBRixHQUFVTixNQUFqQixFQUF5QjtBQUN2QkMsZ0JBQVFJLE1BQU1DLEtBQU4sQ0FBUjtBQUNBLFlBQUlMLFFBQVEsTUFBWixFQUFvQjtBQUNsQkEsbUJBQVMsT0FBVDtBQUNBSCxvQkFBVUwsbUJBQW1CUSxVQUFVLEVBQVYsR0FBZSxLQUFmLEdBQXVCLE1BQTFDLENBQVY7QUFDQUEsa0JBQVEsU0FBU0EsUUFBUSxLQUF6QjtBQUNEO0FBQ0RILGtCQUFVTCxtQkFBbUJRLEtBQW5CLENBQVY7QUFDRDtBQUNELGFBQU9ILE1BQVA7QUFDRCIsImZpbGUiOiIxMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlZCBieSBjb2luIG9uIDA1LzAxLzIwMTcuXG4gKi9cblxuLyoqXG4gKiBUT0RPIOaUueWGmeS4ulVpbnQ4QXJyYXnlrp7njrBcbiAqL1xuXG5jb25zdCBzdHJpbmdGcm9tQ2hhckNvZGUgPSBTdHJpbmcuZnJvbUNoYXJDb2RlXG5leHBvcnQgY2xhc3MgVUNTMlBhcmVyIHtcbiAgc3RhdGljIGRlY29kZSAoc3RyKSB7XG4gICAgY29uc3Qgb3V0cHV0ID0gW11cbiAgICBsZXQgY291bnRlciA9IDBcbiAgICBjb25zdCBsZW5ndGggPSBzdHIubGVuZ3RoXG4gICAgbGV0IHZhbHVlXG4gICAgbGV0IGV4dHJhXG4gICAgd2hpbGUgKGNvdW50ZXIgPCBsZW5ndGgpIHtcbiAgICAgIHZhbHVlID0gc3RyLmNoYXJDb2RlQXQoY291bnRlcisrKVxuICAgICAgaWYgKHZhbHVlID49IDB4RDgwMCAmJiB2YWx1ZSA8PSAweERCRkYgJiYgY291bnRlciA8IGxlbmd0aCkge1xuICAgICAgICAvLyBoaWdoIHN1cnJvZ2F0ZSwgYW5kIHRoZXJlIGlzIGEgbmV4dCBjaGFyYWN0ZXJcbiAgICAgICAgZXh0cmEgPSBzdHIuY2hhckNvZGVBdChjb3VudGVyKyspXG4gICAgICAgIGlmICgoZXh0cmEgJiAweEZDMDApID09IDB4REMwMCkgeyAvLyBsb3cgc3Vycm9nYXRlXG4gICAgICAgICAgb3V0cHV0LnB1c2goKCh2YWx1ZSAmIDB4M0ZGKSA8PCAxMCkgKyAoZXh0cmEgJiAweDNGRikgKyAweDEwMDAwKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIHVubWF0Y2hlZCBzdXJyb2dhdGUgb25seSBhcHBlbmQgdGhpcyBjb2RlIHVuaXQsIGluIGNhc2UgdGhlIG5leHRcbiAgICAgICAgICAvLyBjb2RlIHVuaXQgaXMgdGhlIGhpZ2ggc3Vycm9nYXRlIG9mIGEgc3Vycm9nYXRlIHBhaXJcbiAgICAgICAgICBvdXRwdXQucHVzaCh2YWx1ZSlcbiAgICAgICAgICBjb3VudGVyLS1cbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb3V0cHV0LnB1c2godmFsdWUpXG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBvdXRwdXRcbiAgfVxuICBcbiAgc3RhdGljIGVuY29kZSAoYXJyYXkpIHtcbiAgICBjb25zdCBsZW5ndGggPSBhcnJheS5sZW5ndGhcbiAgICBsZXQgaW5kZXggPSAtMVxuICAgIGxldCB2YWx1ZVxuICAgIGxldCBvdXRwdXQgPSAnJ1xuICAgIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgICB2YWx1ZSA9IGFycmF5W2luZGV4XVxuICAgICAgaWYgKHZhbHVlID4gMHhGRkZGKSB7XG4gICAgICAgIHZhbHVlIC09IDB4MTAwMDBcbiAgICAgICAgb3V0cHV0ICs9IHN0cmluZ0Zyb21DaGFyQ29kZSh2YWx1ZSA+Pj4gMTAgJiAweDNGRiB8IDB4RDgwMClcbiAgICAgICAgdmFsdWUgPSAweERDMDAgfCB2YWx1ZSAmIDB4M0ZGXG4gICAgICB9XG4gICAgICBvdXRwdXQgKz0gc3RyaW5nRnJvbUNoYXJDb2RlKHZhbHVlKVxuICAgIH1cbiAgICByZXR1cm4gb3V0cHV0XG4gIH1cbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvcGFyc2VyL3VjczIuanMiXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 13 */
/***/ function(module, exports) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Created by coin on 04/01/2017.\n */\n\nvar dynamic_uint8_array = exports.dynamic_uint8_array = function dynamic_uint8_array(size) {\n  var length = size || 1 << 16;\n  var array = new Uint8Array(length);\n  var point = 0;\n  var len = void 0,\n      next = void 0;\n\n  var push = function push() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    args.forEach(function (arr) {\n      len = arr.length || arr.byteLength || 0;\n      if (point + len > length) {\n        length = length * 2 + len;\n        next = new Uint8Array(length);\n        next.set(array, 0);\n        array = next;\n      }\n      array.set(arr, point);\n      point += len;\n    });\n  };\n\n  var get = function get() {\n    return array.slice(0, point);\n  };\n\n  return { push: push, get: get };\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdXRpbC9keW5hbWljLXVpbnQ4YXJyYXkuanM/Y2NmYSJdLCJuYW1lcyI6WyJkeW5hbWljX3VpbnQ4X2FycmF5Iiwic2l6ZSIsImxlbmd0aCIsImFycmF5IiwiVWludDhBcnJheSIsInBvaW50IiwibGVuIiwibmV4dCIsInB1c2giLCJhcmdzIiwiZm9yRWFjaCIsImFyciIsImJ5dGVMZW5ndGgiLCJzZXQiLCJnZXQiLCJzbGljZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7OztBQUlPLElBQU1BLG9EQUFzQixTQUF0QkEsbUJBQXNCLENBQUNDLElBQUQsRUFBVTtBQUMzQyxNQUFJQyxTQUFTRCxRQUFRLEtBQUssRUFBMUI7QUFDQSxNQUFJRSxRQUFRLElBQUlDLFVBQUosQ0FBZUYsTUFBZixDQUFaO0FBQ0EsTUFBSUcsUUFBUSxDQUFaO0FBQ0EsTUFBSUMsWUFBSjtBQUFBLE1BQVNDLGFBQVQ7O0FBRUEsTUFBTUMsT0FBTyxTQUFQQSxJQUFPLEdBQWE7QUFBQSxzQ0FBVEMsSUFBUztBQUFUQSxVQUFTO0FBQUE7O0FBQ3hCQSxTQUFLQyxPQUFMLENBQWEsZUFBTztBQUNsQkosWUFBTUssSUFBSVQsTUFBSixJQUFjUyxJQUFJQyxVQUFsQixJQUFnQyxDQUF0QztBQUNBLFVBQUlQLFFBQVFDLEdBQVIsR0FBY0osTUFBbEIsRUFBMEI7QUFDeEJBLGlCQUFTQSxTQUFTLENBQVQsR0FBYUksR0FBdEI7QUFDQUMsZUFBTyxJQUFJSCxVQUFKLENBQWVGLE1BQWYsQ0FBUDtBQUNBSyxhQUFLTSxHQUFMLENBQVNWLEtBQVQsRUFBZ0IsQ0FBaEI7QUFDQUEsZ0JBQVFJLElBQVI7QUFDRDtBQUNESixZQUFNVSxHQUFOLENBQVVGLEdBQVYsRUFBZU4sS0FBZjtBQUNBQSxlQUFTQyxHQUFUO0FBQ0QsS0FWRDtBQVdELEdBWkQ7O0FBY0EsTUFBTVEsTUFBTSxTQUFOQSxHQUFNLEdBQU07QUFDaEIsV0FBT1gsTUFBTVksS0FBTixDQUFZLENBQVosRUFBZVYsS0FBZixDQUFQO0FBQ0QsR0FGRDs7QUFJQSxTQUFPLEVBQUVHLFVBQUYsRUFBUU0sUUFBUixFQUFQO0FBQ0QsQ0F6Qk0iLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZWQgYnkgY29pbiBvbiAwNC8wMS8yMDE3LlxuICovXG5cbmV4cG9ydCBjb25zdCBkeW5hbWljX3VpbnQ4X2FycmF5ID0gKHNpemUpID0+IHtcbiAgbGV0IGxlbmd0aCA9IHNpemUgfHwgMSA8PCAxNlxuICBsZXQgYXJyYXkgPSBuZXcgVWludDhBcnJheShsZW5ndGgpXG4gIGxldCBwb2ludCA9IDBcbiAgbGV0IGxlbiwgbmV4dFxuICBcbiAgY29uc3QgcHVzaCA9ICguLi5hcmdzKSA9PiB7XG4gICAgYXJncy5mb3JFYWNoKGFyciA9PiB7XG4gICAgICBsZW4gPSBhcnIubGVuZ3RoIHx8IGFyci5ieXRlTGVuZ3RoIHx8IDBcbiAgICAgIGlmIChwb2ludCArIGxlbiA+IGxlbmd0aCkge1xuICAgICAgICBsZW5ndGggPSBsZW5ndGggKiAyICsgbGVuXG4gICAgICAgIG5leHQgPSBuZXcgVWludDhBcnJheShsZW5ndGgpXG4gICAgICAgIG5leHQuc2V0KGFycmF5LCAwKVxuICAgICAgICBhcnJheSA9IG5leHRcbiAgICAgIH1cbiAgICAgIGFycmF5LnNldChhcnIsIHBvaW50KVxuICAgICAgcG9pbnQgKz0gbGVuXG4gICAgfSlcbiAgfVxuICBcbiAgY29uc3QgZ2V0ID0gKCkgPT4ge1xuICAgIHJldHVybiBhcnJheS5zbGljZSgwLCBwb2ludClcbiAgfVxuICBcbiAgcmV0dXJuIHsgcHVzaCwgZ2V0IH1cbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvdXRpbC9keW5hbWljLXVpbnQ4YXJyYXkuanMiXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 14 */,
/* 15 */,
/* 16 */,
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar _assert = __webpack_require__(18);\n\nvar _ucs = __webpack_require__(12);\n\nvar _util = __webpack_require__(23);\n\ndescribe('UCS2Parer', function () {\n  var string = void 0,\n      code_points = void 0,\n      result = void 0;\n  describe('#ascii code test', function () {\n    result = (0, _util.getString)(_util.ECODEING.ASCII);\n    code_points = _ucs.UCS2Parer.decode(result.string);\n    string = _ucs.UCS2Parer.encode(result.code_points);\n\n    it('code::' + JSON.stringify(result.code_points) + ' will equal with original code', function () {\n      code_points.forEach(function (c, i) {\n        (0, _assert.equal)(c, result.code_points[i]);\n      });\n    });\n\n    it('string:: \"' + result.string + '\" will equal original string', function () {\n      (0, _assert.equal)(string, result.string);\n    });\n  });\n\n  describe('#unicode test', function () {\n    result = (0, _util.getString)(_util.ECODEING.UNICODE);\n    code_points = _ucs.UCS2Parer.decode(result.string);\n    string = _ucs.UCS2Parer.encode(result.code_points);\n\n    it('code::' + JSON.stringify(result.code_points) + ' will equal with original code', function () {\n      code_points.forEach(function (c, i) {\n        (0, _assert.equal)(c, result.code_points[i]);\n      });\n    });\n\n    it('string:: \"' + result.string + '\" will equal original string', function () {\n      (0, _assert.equal)(string, result.string);\n    });\n  });\n}); /**\n     * Created by coin on 05/01/2017.\n     *///# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi90ZXN0L21vY2hhL3BhcnNlci91Y3MyLnRlc3QuanM/NjI1ZiJdLCJuYW1lcyI6WyJkZXNjcmliZSIsInN0cmluZyIsImNvZGVfcG9pbnRzIiwicmVzdWx0IiwiQVNDSUkiLCJkZWNvZGUiLCJlbmNvZGUiLCJpdCIsIkpTT04iLCJzdHJpbmdpZnkiLCJmb3JFYWNoIiwiYyIsImkiLCJVTklDT0RFIl0sIm1hcHBpbmdzIjoiOztBQUlBOztBQUNBOztBQUNBOztBQUVBQSxTQUFTLFdBQVQsRUFBc0IsWUFBTTtBQUMxQixNQUFJQyxlQUFKO0FBQUEsTUFBWUMsb0JBQVo7QUFBQSxNQUF5QkMsZUFBekI7QUFDQUgsV0FBUyxrQkFBVCxFQUE2QixZQUFNO0FBQ2pDRyxhQUFTLHFCQUFVLGVBQVNDLEtBQW5CLENBQVQ7QUFDQUYsa0JBQWMsZUFBVUcsTUFBVixDQUFpQkYsT0FBT0YsTUFBeEIsQ0FBZDtBQUNBQSxhQUFTLGVBQVVLLE1BQVYsQ0FBaUJILE9BQU9ELFdBQXhCLENBQVQ7O0FBRUFLLGtCQUFZQyxLQUFLQyxTQUFMLENBQWVOLE9BQU9ELFdBQXRCLENBQVoscUNBQWdGLFlBQU07QUFDcEZBLGtCQUFZUSxPQUFaLENBQW9CLFVBQUNDLENBQUQsRUFBSUMsQ0FBSixFQUFVO0FBQzVCLDJCQUFNRCxDQUFOLEVBQVNSLE9BQU9ELFdBQVAsQ0FBbUJVLENBQW5CLENBQVQ7QUFDRCxPQUZEO0FBR0QsS0FKRDs7QUFNQUwsc0JBQWdCSixPQUFPRixNQUF2QixtQ0FBNkQsWUFBTTtBQUNqRSx5QkFBTUEsTUFBTixFQUFjRSxPQUFPRixNQUFyQjtBQUNELEtBRkQ7QUFHRCxHQWREOztBQWdCQUQsV0FBUyxlQUFULEVBQTBCLFlBQU07QUFDOUJHLGFBQVMscUJBQVUsZUFBU1UsT0FBbkIsQ0FBVDtBQUNBWCxrQkFBYyxlQUFVRyxNQUFWLENBQWlCRixPQUFPRixNQUF4QixDQUFkO0FBQ0FBLGFBQVMsZUFBVUssTUFBVixDQUFpQkgsT0FBT0QsV0FBeEIsQ0FBVDs7QUFFQUssa0JBQVlDLEtBQUtDLFNBQUwsQ0FBZU4sT0FBT0QsV0FBdEIsQ0FBWixxQ0FBZ0YsWUFBTTtBQUNwRkEsa0JBQVlRLE9BQVosQ0FBb0IsVUFBQ0MsQ0FBRCxFQUFJQyxDQUFKLEVBQVU7QUFDNUIsMkJBQU1ELENBQU4sRUFBU1IsT0FBT0QsV0FBUCxDQUFtQlUsQ0FBbkIsQ0FBVDtBQUNELE9BRkQ7QUFHRCxLQUpEOztBQU1BTCxzQkFBZ0JKLE9BQU9GLE1BQXZCLG1DQUE2RCxZQUFNO0FBQ2pFLHlCQUFNQSxNQUFOLEVBQWNFLE9BQU9GLE1BQXJCO0FBQ0QsS0FGRDtBQUdELEdBZEQ7QUFlRCxDQWpDRCxFLENBUkEiLCJmaWxlIjoiMTcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZWQgYnkgY29pbiBvbiAwNS8wMS8yMDE3LlxuICovXG5cbmltcG9ydCB7IGVxdWFsIH0gZnJvbSAnYXNzZXJ0J1xuaW1wb3J0IHsgVUNTMlBhcmVyIH0gZnJvbSAnLi4vLi4vLi4vc3JjL3BhcnNlci91Y3MyJ1xuaW1wb3J0IHsgZ2V0U3RyaW5nLCBFQ09ERUlORyB9IGZyb20gJy4vdXRpbCdcblxuZGVzY3JpYmUoJ1VDUzJQYXJlcicsICgpID0+IHtcbiAgbGV0IHN0cmluZywgY29kZV9wb2ludHMsIHJlc3VsdFxuICBkZXNjcmliZSgnI2FzY2lpIGNvZGUgdGVzdCcsICgpID0+IHtcbiAgICByZXN1bHQgPSBnZXRTdHJpbmcoRUNPREVJTkcuQVNDSUkpXG4gICAgY29kZV9wb2ludHMgPSBVQ1MyUGFyZXIuZGVjb2RlKHJlc3VsdC5zdHJpbmcpXG4gICAgc3RyaW5nID0gVUNTMlBhcmVyLmVuY29kZShyZXN1bHQuY29kZV9wb2ludHMpXG4gICAgXG4gICAgaXQoYGNvZGU6OiR7SlNPTi5zdHJpbmdpZnkocmVzdWx0LmNvZGVfcG9pbnRzKX0gd2lsbCBlcXVhbCB3aXRoIG9yaWdpbmFsIGNvZGVgLCAoKSA9PiB7XG4gICAgICBjb2RlX3BvaW50cy5mb3JFYWNoKChjLCBpKSA9PiB7XG4gICAgICAgIGVxdWFsKGMsIHJlc3VsdC5jb2RlX3BvaW50c1tpXSlcbiAgICAgIH0pXG4gICAgfSlcbiAgICBcbiAgICBpdChgc3RyaW5nOjogXCIke3Jlc3VsdC5zdHJpbmd9XCIgd2lsbCBlcXVhbCBvcmlnaW5hbCBzdHJpbmdgLCAoKSA9PiB7XG4gICAgICBlcXVhbChzdHJpbmcsIHJlc3VsdC5zdHJpbmcpXG4gICAgfSlcbiAgfSlcbiAgXG4gIGRlc2NyaWJlKCcjdW5pY29kZSB0ZXN0JywgKCkgPT4ge1xuICAgIHJlc3VsdCA9IGdldFN0cmluZyhFQ09ERUlORy5VTklDT0RFKVxuICAgIGNvZGVfcG9pbnRzID0gVUNTMlBhcmVyLmRlY29kZShyZXN1bHQuc3RyaW5nKVxuICAgIHN0cmluZyA9IFVDUzJQYXJlci5lbmNvZGUocmVzdWx0LmNvZGVfcG9pbnRzKVxuICAgIFxuICAgIGl0KGBjb2RlOjoke0pTT04uc3RyaW5naWZ5KHJlc3VsdC5jb2RlX3BvaW50cyl9IHdpbGwgZXF1YWwgd2l0aCBvcmlnaW5hbCBjb2RlYCwgKCkgPT4ge1xuICAgICAgY29kZV9wb2ludHMuZm9yRWFjaCgoYywgaSkgPT4ge1xuICAgICAgICBlcXVhbChjLCByZXN1bHQuY29kZV9wb2ludHNbaV0pXG4gICAgICB9KVxuICAgIH0pXG4gICAgXG4gICAgaXQoYHN0cmluZzo6IFwiJHtyZXN1bHQuc3RyaW5nfVwiIHdpbGwgZXF1YWwgb3JpZ2luYWwgc3RyaW5nYCwgKCkgPT4ge1xuICAgICAgZXF1YWwoc3RyaW5nLCByZXN1bHQuc3RyaW5nKVxuICAgIH0pXG4gIH0pXG59KVxuXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi90ZXN0L21vY2hhL3BhcnNlci91Y3MyLnRlc3QuanMiXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = __webpack_require__(19);\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = __webpack_require__(21);\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = __webpack_require__(22);\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(20)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 20 */
/***/ function(module, exports) {

	eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 21 */
/***/ function(module, exports) {

	eval("module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3V0aWwvc3VwcG9ydC9pc0J1ZmZlckJyb3dzZXIuanM/ODU5NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzQnVmZmVyKGFyZykge1xuICByZXR1cm4gYXJnICYmIHR5cGVvZiBhcmcgPT09ICdvYmplY3QnXG4gICAgJiYgdHlwZW9mIGFyZy5jb3B5ID09PSAnZnVuY3Rpb24nXG4gICAgJiYgdHlwZW9mIGFyZy5maWxsID09PSAnZnVuY3Rpb24nXG4gICAgJiYgdHlwZW9mIGFyZy5yZWFkVUludDggPT09ICdmdW5jdGlvbic7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3V0aWwvc3VwcG9ydC9pc0J1ZmZlckJyb3dzZXIuanNcbi8vIG1vZHVsZSBpZCA9IDIxXG4vLyBtb2R1bGUgY2h1bmtzID0gNSJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 22 */
/***/ function(module, exports) {

	eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3V0aWwvfi9pbmhlcml0cy9pbmhlcml0c19icm93c2VyLmpzP2FiYTUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpZiAodHlwZW9mIE9iamVjdC5jcmVhdGUgPT09ICdmdW5jdGlvbicpIHtcbiAgLy8gaW1wbGVtZW50YXRpb24gZnJvbSBzdGFuZGFyZCBub2RlLmpzICd1dGlsJyBtb2R1bGVcbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpbmhlcml0cyhjdG9yLCBzdXBlckN0b3IpIHtcbiAgICBjdG9yLnN1cGVyXyA9IHN1cGVyQ3RvclxuICAgIGN0b3IucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckN0b3IucHJvdG90eXBlLCB7XG4gICAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgICB2YWx1ZTogY3RvcixcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcbn0gZWxzZSB7XG4gIC8vIG9sZCBzY2hvb2wgc2hpbSBmb3Igb2xkIGJyb3dzZXJzXG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaW5oZXJpdHMoY3Rvciwgc3VwZXJDdG9yKSB7XG4gICAgY3Rvci5zdXBlcl8gPSBzdXBlckN0b3JcbiAgICB2YXIgVGVtcEN0b3IgPSBmdW5jdGlvbiAoKSB7fVxuICAgIFRlbXBDdG9yLnByb3RvdHlwZSA9IHN1cGVyQ3Rvci5wcm90b3R5cGVcbiAgICBjdG9yLnByb3RvdHlwZSA9IG5ldyBUZW1wQ3RvcigpXG4gICAgY3Rvci5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBjdG9yXG4gIH1cbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi91dGlsL34vaW5oZXJpdHMvaW5oZXJpdHNfYnJvd3Nlci5qc1xuLy8gbW9kdWxlIGlkID0gMjJcbi8vIG1vZHVsZSBjaHVua3MgPSA1Il0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.typeArrayToArray = exports.toString = exports.ECODEING = exports.getString = undefined;\n\nvar _util = __webpack_require__(5);\n\nvar ECODEING = {\n  ASCII: [0, 128],\n  UNICODE: [0, 0xFFFF]\n}; /**\n    * Created by coin on 05/01/2017.\n    */\n\nvar LENGTH = 6;\nvar STRING_KEY_ARRAY = new Array(LENGTH).fill(1);\n\nvar toString = function toString(array) {\n  return String.fromCodePoint.apply(String, array);\n};\n\nvar getString = function getString(range) {\n  var min = range[0],\n      max = range[1];\n  var code_points = [];\n  var code = void 0;\n\n  var string = toString(STRING_KEY_ARRAY.map(function () {\n    code = (0, _util.random)(min, max);\n    code_points.push(code);\n    return code;\n  }));\n\n  return { string: string, code_points: code_points };\n};\n\nvar typeArrayToArray = function typeArrayToArray(array) {\n  return array.reduce(function (p, c) {\n    return p.concat(c);\n  }, []);\n};\n\nexports.getString = getString;\nexports.ECODEING = ECODEING;\nexports.toString = toString;\nexports.typeArrayToArray = typeArrayToArray;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi90ZXN0L21vY2hhL3BhcnNlci91dGlsLmpzP2IyN2IiXSwibmFtZXMiOlsiRUNPREVJTkciLCJBU0NJSSIsIlVOSUNPREUiLCJMRU5HVEgiLCJTVFJJTkdfS0VZX0FSUkFZIiwiQXJyYXkiLCJmaWxsIiwidG9TdHJpbmciLCJhcnJheSIsIlN0cmluZyIsImZyb21Db2RlUG9pbnQiLCJhcHBseSIsImdldFN0cmluZyIsInJhbmdlIiwibWluIiwibWF4IiwiY29kZV9wb2ludHMiLCJjb2RlIiwic3RyaW5nIiwibWFwIiwicHVzaCIsInR5cGVBcnJheVRvQXJyYXkiLCJyZWR1Y2UiLCJwIiwiYyIsImNvbmNhdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUlBOztBQUNBLElBQU1BLFdBQVc7QUFDZkMsU0FBTyxDQUFDLENBQUQsRUFBSSxHQUFKLENBRFE7QUFFZkMsV0FBUyxDQUFDLENBQUQsRUFBSSxNQUFKO0FBRk0sQ0FBakIsQyxDQUxBOzs7O0FBU0EsSUFBTUMsU0FBUyxDQUFmO0FBQ0EsSUFBTUMsbUJBQW1CLElBQUlDLEtBQUosQ0FBVUYsTUFBVixFQUFrQkcsSUFBbEIsQ0FBdUIsQ0FBdkIsQ0FBekI7O0FBRUEsSUFBTUMsV0FBVyxTQUFYQSxRQUFXLENBQUNDLEtBQUQsRUFBVztBQUMxQixTQUFPQyxPQUFPQyxhQUFQLENBQXFCQyxLQUFyQixDQUEyQkYsTUFBM0IsRUFBbUNELEtBQW5DLENBQVA7QUFDRCxDQUZEOztBQUlBLElBQU1JLFlBQVksU0FBWkEsU0FBWSxDQUFDQyxLQUFELEVBQVc7QUFDM0IsTUFBTUMsTUFBTUQsTUFBTSxDQUFOLENBQVo7QUFBQSxNQUFzQkUsTUFBTUYsTUFBTSxDQUFOLENBQTVCO0FBQ0EsTUFBTUcsY0FBYyxFQUFwQjtBQUNBLE1BQUlDLGFBQUo7O0FBRUEsTUFBTUMsU0FBU1gsU0FBU0gsaUJBQWlCZSxHQUFqQixDQUFxQixZQUFNO0FBQ2pERixXQUFPLGtCQUFPSCxHQUFQLEVBQVlDLEdBQVosQ0FBUDtBQUNBQyxnQkFBWUksSUFBWixDQUFpQkgsSUFBakI7QUFDQSxXQUFPQSxJQUFQO0FBQ0QsR0FKdUIsQ0FBVCxDQUFmOztBQU1BLFNBQU8sRUFBRUMsY0FBRixFQUFVRix3QkFBVixFQUFQO0FBQ0QsQ0FaRDs7QUFjQSxJQUFNSyxtQkFBbUIsU0FBbkJBLGdCQUFtQixDQUFDYixLQUFEO0FBQUEsU0FBV0EsTUFBTWMsTUFBTixDQUFhLFVBQUNDLENBQUQsRUFBSUMsQ0FBSjtBQUFBLFdBQVVELEVBQUVFLE1BQUYsQ0FBU0QsQ0FBVCxDQUFWO0FBQUEsR0FBYixFQUFvQyxFQUFwQyxDQUFYO0FBQUEsQ0FBekI7O1FBRVNaLFMsR0FBQUEsUztRQUFXWixRLEdBQUFBLFE7UUFBVU8sUSxHQUFBQSxRO1FBQVVjLGdCLEdBQUFBLGdCIiwiZmlsZSI6IjIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGVkIGJ5IGNvaW4gb24gMDUvMDEvMjAxNy5cbiAqL1xuXG5pbXBvcnQgeyByYW5kb20gfSBmcm9tICcuLi8uLi8uLi9zcmMvdXRpbC91dGlsJ1xuY29uc3QgRUNPREVJTkcgPSB7XG4gIEFTQ0lJOiBbMCwgMTI4XSxcbiAgVU5JQ09ERTogWzAsIDB4RkZGRl1cbn1cbmNvbnN0IExFTkdUSCA9IDZcbmNvbnN0IFNUUklOR19LRVlfQVJSQVkgPSBuZXcgQXJyYXkoTEVOR1RIKS5maWxsKDEpXG5cbmNvbnN0IHRvU3RyaW5nID0gKGFycmF5KSA9PiB7XG4gIHJldHVybiBTdHJpbmcuZnJvbUNvZGVQb2ludC5hcHBseShTdHJpbmcsIGFycmF5KVxufVxuXG5jb25zdCBnZXRTdHJpbmcgPSAocmFuZ2UpID0+IHtcbiAgY29uc3QgbWluID0gcmFuZ2VbMF0sIG1heCA9IHJhbmdlWzFdXG4gIGNvbnN0IGNvZGVfcG9pbnRzID0gW11cbiAgbGV0IGNvZGVcbiAgXG4gIGNvbnN0IHN0cmluZyA9IHRvU3RyaW5nKFNUUklOR19LRVlfQVJSQVkubWFwKCgpID0+IHtcbiAgICBjb2RlID0gcmFuZG9tKG1pbiwgbWF4KVxuICAgIGNvZGVfcG9pbnRzLnB1c2goY29kZSlcbiAgICByZXR1cm4gY29kZVxuICB9KSlcbiAgXG4gIHJldHVybiB7IHN0cmluZywgY29kZV9wb2ludHMgfVxufVxuXG5jb25zdCB0eXBlQXJyYXlUb0FycmF5ID0gKGFycmF5KSA9PiBhcnJheS5yZWR1Y2UoKHAsIGMpID0+IHAuY29uY2F0KGMpLCBbXSlcblxuZXhwb3J0IHsgZ2V0U3RyaW5nLCBFQ09ERUlORywgdG9TdHJpbmcsIHR5cGVBcnJheVRvQXJyYXkgfVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3Rlc3QvbW9jaGEvcGFyc2VyL3V0aWwuanMiXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar _assert = __webpack_require__(18);\n\nvar _utf = __webpack_require__(11);\n\nvar _util = __webpack_require__(23);\n\nvar BOM = [0x00ef, 0x00bb, 0x00bf]; /**\n                                     * Created by coin on 05/01/2017.\n                                     */\n\ndescribe('UTF8Parer', function () {\n  describe('.entry', function () {\n    var parser = new _utf.UTF8Parser();\n    parser.bytes = 3;\n    var string = void 0,\n        code_points = void 0,\n        result = void 0,\n        parser_result = void 0,\n        with_bom = void 0;\n\n    describe('#ascii code with BOM', function () {\n      result = (0, _util.getString)(_util.ECODEING.ASCII);\n      with_bom = BOM.concat(result.code_points);\n      parser_result = parser.entry(with_bom);\n      code_points = parser_result.character;\n      string = (0, _util.toString)(code_points);\n\n      it('origin code:: ' + JSON.stringify(with_bom) + ' discard \\n          BOM::' + JSON.stringify(BOM) + '\\n          result::' + JSON.stringify(code_points), function () {\n        BOM.forEach(function (n) {\n          return (0, _assert.equal)(code_points.indexOf(n), -1);\n        });\n      });\n\n      it('string:: \"' + result.string + '\" will equal original string', function () {\n        (0, _assert.equal)(string, result.string);\n      });\n    });\n\n    describe('#ascii code without BOM', function () {\n      result = (0, _util.getString)(_util.ECODEING.ASCII);\n      parser_result = parser.entry(result.code_points);\n      code_points = parser_result.character;\n      string = (0, _util.toString)(code_points);\n\n      it('origin code:: ' + JSON.stringify(result.code_points) + ' will equal \\n          result:: ' + JSON.stringify(code_points), function () {\n        result.code_points.forEach(function (n) {\n          return (0, _assert.ok)(code_points.indexOf(n) !== -1);\n        });\n      });\n\n      it('string:: \"' + result.string + '\" will equal original string', function () {\n        (0, _assert.equal)(string, result.string);\n      });\n    });\n  });\n\n  describe('.unicode_to_utf8_uint8', function () {\n    var result = (0, _util.getString)(_util.ECODEING.UNICODE);\n    var utf8 = _utf.UTF8Parser.unicode_to_utf8_uint8(result.code_points);\n    var min = 0,\n        max = 255;\n\n    it('#unicode code:: ' + JSON.stringify(result.code_points) + ' \\n        to utf8:: ' + JSON.stringify(utf8) + ' \\n        will between ' + min + ' and ' + max, function () {\n      utf8.forEach(function (n) {\n        return (0, _assert.ok)(n >= min && n < max);\n      });\n    });\n  });\n\n  describe('.string_to_utf8_uint8', function () {\n    var min = 0,\n        max = 255;\n\n    var result = (0, _util.getString)(_util.ECODEING.UNICODE);\n    var utf8_code = _utf.UTF8Parser.string_to_utf8_uint8(result.string);\n    var array = (0, _util.typeArrayToArray)(utf8_code);\n    var parser = new _utf.UTF8Parser();\n    // 不忽略BOM\n    parser.bytes = 3;\n    var parse_array = parser.entry(utf8_code).character;\n    var parse_string = (0, _util.toString)(parse_array);\n\n    it('code:: ' + result.code_points + '\\n        to string:: ' + result.string + ' \\n        to utf8 code:: ' + JSON.stringify(array) + ' \\n        will between ' + min + ' and ' + max + '. then the \\n        code::' + JSON.stringify(parse_array) + ' \\n        can to be\\n        string:: ' + parse_string + ' that equal\\n        original string:: ' + result.string, function () {\n\n      array.forEach(function (n) {\n        return (0, _assert.ok)(n >= min && n < max);\n      });\n      (0, _assert.equal)(parse_string, result.string);\n    });\n  });\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi90ZXN0L21vY2hhL3BhcnNlci91dGY4LnRlc3QuanM/ZWMzMCJdLCJuYW1lcyI6WyJCT00iLCJkZXNjcmliZSIsInBhcnNlciIsImJ5dGVzIiwic3RyaW5nIiwiY29kZV9wb2ludHMiLCJyZXN1bHQiLCJwYXJzZXJfcmVzdWx0Iiwid2l0aF9ib20iLCJBU0NJSSIsImNvbmNhdCIsImVudHJ5IiwiY2hhcmFjdGVyIiwiaXQiLCJKU09OIiwic3RyaW5naWZ5IiwiZm9yRWFjaCIsImluZGV4T2YiLCJuIiwiVU5JQ09ERSIsInV0ZjgiLCJ1bmljb2RlX3RvX3V0ZjhfdWludDgiLCJtaW4iLCJtYXgiLCJ1dGY4X2NvZGUiLCJzdHJpbmdfdG9fdXRmOF91aW50OCIsImFycmF5IiwicGFyc2VfYXJyYXkiLCJwYXJzZV9zdHJpbmciXSwibWFwcGluZ3MiOiI7O0FBSUE7O0FBQ0E7O0FBQ0E7O0FBRUEsSUFBTUEsTUFBTSxDQUFDLE1BQUQsRUFBUyxNQUFULEVBQWlCLE1BQWpCLENBQVosQyxDQVJBOzs7O0FBVUFDLFNBQVMsV0FBVCxFQUFzQixZQUFNO0FBQzFCQSxXQUFTLFFBQVQsRUFBbUIsWUFBSztBQUN0QixRQUFNQyxTQUFTLHFCQUFmO0FBQ0FBLFdBQU9DLEtBQVAsR0FBZSxDQUFmO0FBQ0EsUUFBSUMsZUFBSjtBQUFBLFFBQVlDLG9CQUFaO0FBQUEsUUFBeUJDLGVBQXpCO0FBQUEsUUFBaUNDLHNCQUFqQztBQUFBLFFBQWdEQyxpQkFBaEQ7O0FBRUFQLGFBQVMsc0JBQVQsRUFBaUMsWUFBTTtBQUNyQ0ssZUFBUyxxQkFBVSxlQUFTRyxLQUFuQixDQUFUO0FBQ0FELGlCQUFXUixJQUFJVSxNQUFKLENBQVdKLE9BQU9ELFdBQWxCLENBQVg7QUFDQUUsc0JBQWdCTCxPQUFPUyxLQUFQLENBQWFILFFBQWIsQ0FBaEI7QUFDQUgsb0JBQWNFLGNBQWNLLFNBQTVCO0FBQ0FSLGVBQVMsb0JBQVNDLFdBQVQsQ0FBVDs7QUFFQVEsNEJBQW9CQyxLQUFLQyxTQUFMLENBQWVQLFFBQWYsQ0FBcEIsa0NBQ1dNLEtBQUtDLFNBQUwsQ0FBZWYsR0FBZixDQURYLDRCQUVjYyxLQUFLQyxTQUFMLENBQWVWLFdBQWYsQ0FGZCxFQUU2QyxZQUFNO0FBQ2pETCxZQUFJZ0IsT0FBSixDQUFZO0FBQUEsaUJBQUksbUJBQU1YLFlBQVlZLE9BQVosQ0FBb0JDLENBQXBCLENBQU4sRUFBOEIsQ0FBQyxDQUEvQixDQUFKO0FBQUEsU0FBWjtBQUNELE9BSkQ7O0FBTUFMLHdCQUFnQlAsT0FBT0YsTUFBdkIsbUNBQTZELFlBQU07QUFDakUsMkJBQU1BLE1BQU4sRUFBY0UsT0FBT0YsTUFBckI7QUFDRCxPQUZEO0FBR0QsS0FoQkQ7O0FBa0JBSCxhQUFTLHlCQUFULEVBQW9DLFlBQU07QUFDeENLLGVBQVMscUJBQVUsZUFBU0csS0FBbkIsQ0FBVDtBQUNBRixzQkFBZ0JMLE9BQU9TLEtBQVAsQ0FBYUwsT0FBT0QsV0FBcEIsQ0FBaEI7QUFDQUEsb0JBQWNFLGNBQWNLLFNBQTVCO0FBQ0FSLGVBQVMsb0JBQVNDLFdBQVQsQ0FBVDs7QUFFQVEsNEJBQW9CQyxLQUFLQyxTQUFMLENBQWVULE9BQU9ELFdBQXRCLENBQXBCLHlDQUNlUyxLQUFLQyxTQUFMLENBQWVWLFdBQWYsQ0FEZixFQUM4QyxZQUFNO0FBQ2xEQyxlQUFPRCxXQUFQLENBQW1CVyxPQUFuQixDQUEyQjtBQUFBLGlCQUFJLGdCQUFHWCxZQUFZWSxPQUFaLENBQW9CQyxDQUFwQixNQUEyQixDQUFDLENBQS9CLENBQUo7QUFBQSxTQUEzQjtBQUNELE9BSEQ7O0FBS0FMLHdCQUFnQlAsT0FBT0YsTUFBdkIsbUNBQTZELFlBQU07QUFDakUsMkJBQU1BLE1BQU4sRUFBY0UsT0FBT0YsTUFBckI7QUFDRCxPQUZEO0FBR0QsS0FkRDtBQWVELEdBdENEOztBQXdDQUgsV0FBUyx3QkFBVCxFQUFtQyxZQUFNO0FBQ3ZDLFFBQUlLLFNBQVMscUJBQVUsZUFBU2EsT0FBbkIsQ0FBYjtBQUNBLFFBQUlDLE9BQU8sZ0JBQVdDLHFCQUFYLENBQWlDZixPQUFPRCxXQUF4QyxDQUFYO0FBQ0EsUUFBTWlCLE1BQU0sQ0FBWjtBQUFBLFFBQWVDLE1BQU0sR0FBckI7O0FBRUFWLDRCQUFzQkMsS0FBS0MsU0FBTCxDQUFlVCxPQUFPRCxXQUF0QixDQUF0Qiw2QkFDZ0JTLEtBQUtDLFNBQUwsQ0FBZUssSUFBZixDQURoQixnQ0FFbUJFLEdBRm5CLGFBRThCQyxHQUY5QixFQUVxQyxZQUFNO0FBQ3pDSCxXQUFLSixPQUFMLENBQWE7QUFBQSxlQUFLLGdCQUFHRSxLQUFLSSxHQUFMLElBQVlKLElBQUlLLEdBQW5CLENBQUw7QUFBQSxPQUFiO0FBQ0QsS0FKRDtBQUtELEdBVkQ7O0FBWUF0QixXQUFTLHVCQUFULEVBQWtDLFlBQU07QUFDdEMsUUFBTXFCLE1BQU0sQ0FBWjtBQUFBLFFBQWVDLE1BQU0sR0FBckI7O0FBRUEsUUFBSWpCLFNBQVMscUJBQVUsZUFBU2EsT0FBbkIsQ0FBYjtBQUNBLFFBQUlLLFlBQVksZ0JBQVdDLG9CQUFYLENBQWdDbkIsT0FBT0YsTUFBdkMsQ0FBaEI7QUFDQSxRQUFJc0IsUUFBUSw0QkFBaUJGLFNBQWpCLENBQVo7QUFDQSxRQUFJdEIsU0FBUyxxQkFBYjtBQUNBO0FBQ0FBLFdBQU9DLEtBQVAsR0FBZSxDQUFmO0FBQ0EsUUFBSXdCLGNBQWN6QixPQUFPUyxLQUFQLENBQWFhLFNBQWIsRUFBd0JaLFNBQTFDO0FBQ0EsUUFBSWdCLGVBQWUsb0JBQVNELFdBQVQsQ0FBbkI7O0FBRUFkLG1CQUFhUCxPQUFPRCxXQUFwQiw4QkFDa0JDLE9BQU9GLE1BRHpCLGtDQUVxQlUsS0FBS0MsU0FBTCxDQUFlVyxLQUFmLENBRnJCLGdDQUdtQkosR0FIbkIsYUFHOEJDLEdBSDlCLG1DQUlZVCxLQUFLQyxTQUFMLENBQWVZLFdBQWYsQ0FKWiwrQ0FNZUMsWUFOZiwrQ0FPd0J0QixPQUFPRixNQVAvQixFQU95QyxZQUFNOztBQUU3Q3NCLFlBQU1WLE9BQU4sQ0FBYztBQUFBLGVBQUssZ0JBQUdFLEtBQUtJLEdBQUwsSUFBWUosSUFBSUssR0FBbkIsQ0FBTDtBQUFBLE9BQWQ7QUFDQSx5QkFBTUssWUFBTixFQUFvQnRCLE9BQU9GLE1BQTNCO0FBQ0QsS0FYRDtBQVlELEdBeEJEO0FBeUJELENBOUVEIiwiZmlsZSI6IjI0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGVkIGJ5IGNvaW4gb24gMDUvMDEvMjAxNy5cbiAqL1xuXG5pbXBvcnQgeyBlcXVhbCwgb2sgfSBmcm9tICdhc3NlcnQnXG5pbXBvcnQgeyBVVEY4UGFyc2VyIH0gZnJvbSAnLi4vLi4vLi4vc3JjL3BhcnNlci91dGY4J1xuaW1wb3J0IHsgZ2V0U3RyaW5nLCBFQ09ERUlORywgdG9TdHJpbmcsIHR5cGVBcnJheVRvQXJyYXl9IGZyb20gJy4vdXRpbCdcblxuY29uc3QgQk9NID0gWzB4MDBlZiwgMHgwMGJiLCAweDAwYmZdXG5cbmRlc2NyaWJlKCdVVEY4UGFyZXInLCAoKSA9PiB7XG4gIGRlc2NyaWJlKCcuZW50cnknLCAoKT0+IHtcbiAgICBjb25zdCBwYXJzZXIgPSBuZXcgVVRGOFBhcnNlcigpXG4gICAgcGFyc2VyLmJ5dGVzID0gM1xuICAgIGxldCBzdHJpbmcsIGNvZGVfcG9pbnRzLCByZXN1bHQsIHBhcnNlcl9yZXN1bHQsIHdpdGhfYm9tXG4gICAgXG4gICAgZGVzY3JpYmUoJyNhc2NpaSBjb2RlIHdpdGggQk9NJywgKCkgPT4ge1xuICAgICAgcmVzdWx0ID0gZ2V0U3RyaW5nKEVDT0RFSU5HLkFTQ0lJKVxuICAgICAgd2l0aF9ib20gPSBCT00uY29uY2F0KHJlc3VsdC5jb2RlX3BvaW50cylcbiAgICAgIHBhcnNlcl9yZXN1bHQgPSBwYXJzZXIuZW50cnkod2l0aF9ib20pXG4gICAgICBjb2RlX3BvaW50cyA9IHBhcnNlcl9yZXN1bHQuY2hhcmFjdGVyXG4gICAgICBzdHJpbmcgPSB0b1N0cmluZyhjb2RlX3BvaW50cylcbiAgICAgIFxuICAgICAgaXQoYG9yaWdpbiBjb2RlOjogJHtKU09OLnN0cmluZ2lmeSh3aXRoX2JvbSl9IGRpc2NhcmQgXG4gICAgICAgICAgQk9NOjoke0pTT04uc3RyaW5naWZ5KEJPTSl9XG4gICAgICAgICAgcmVzdWx0Ojoke0pTT04uc3RyaW5naWZ5KGNvZGVfcG9pbnRzKX1gLCAoKSA9PiB7XG4gICAgICAgIEJPTS5mb3JFYWNoKG4gPT5lcXVhbChjb2RlX3BvaW50cy5pbmRleE9mKG4pLCAtMSkpXG4gICAgICB9KVxuICAgICAgXG4gICAgICBpdChgc3RyaW5nOjogXCIke3Jlc3VsdC5zdHJpbmd9XCIgd2lsbCBlcXVhbCBvcmlnaW5hbCBzdHJpbmdgLCAoKSA9PiB7XG4gICAgICAgIGVxdWFsKHN0cmluZywgcmVzdWx0LnN0cmluZylcbiAgICAgIH0pXG4gICAgfSlcbiAgICBcbiAgICBkZXNjcmliZSgnI2FzY2lpIGNvZGUgd2l0aG91dCBCT00nLCAoKSA9PiB7XG4gICAgICByZXN1bHQgPSBnZXRTdHJpbmcoRUNPREVJTkcuQVNDSUkpXG4gICAgICBwYXJzZXJfcmVzdWx0ID0gcGFyc2VyLmVudHJ5KHJlc3VsdC5jb2RlX3BvaW50cylcbiAgICAgIGNvZGVfcG9pbnRzID0gcGFyc2VyX3Jlc3VsdC5jaGFyYWN0ZXJcbiAgICAgIHN0cmluZyA9IHRvU3RyaW5nKGNvZGVfcG9pbnRzKVxuICAgICAgXG4gICAgICBpdChgb3JpZ2luIGNvZGU6OiAke0pTT04uc3RyaW5naWZ5KHJlc3VsdC5jb2RlX3BvaW50cyl9IHdpbGwgZXF1YWwgXG4gICAgICAgICAgcmVzdWx0OjogJHtKU09OLnN0cmluZ2lmeShjb2RlX3BvaW50cyl9YCwgKCkgPT4ge1xuICAgICAgICByZXN1bHQuY29kZV9wb2ludHMuZm9yRWFjaChuID0+b2soY29kZV9wb2ludHMuaW5kZXhPZihuKSAhPT0gLTEpKVxuICAgICAgfSlcbiAgICAgIFxuICAgICAgaXQoYHN0cmluZzo6IFwiJHtyZXN1bHQuc3RyaW5nfVwiIHdpbGwgZXF1YWwgb3JpZ2luYWwgc3RyaW5nYCwgKCkgPT4ge1xuICAgICAgICBlcXVhbChzdHJpbmcsIHJlc3VsdC5zdHJpbmcpXG4gICAgICB9KVxuICAgIH0pXG4gIH0pXG4gIFxuICBkZXNjcmliZSgnLnVuaWNvZGVfdG9fdXRmOF91aW50OCcsICgpID0+IHtcbiAgICBsZXQgcmVzdWx0ID0gZ2V0U3RyaW5nKEVDT0RFSU5HLlVOSUNPREUpXG4gICAgbGV0IHV0ZjggPSBVVEY4UGFyc2VyLnVuaWNvZGVfdG9fdXRmOF91aW50OChyZXN1bHQuY29kZV9wb2ludHMpXG4gICAgY29uc3QgbWluID0gMCwgbWF4ID0gMGIxMTExMTExMVxuICAgIFxuICAgIGl0KGAjdW5pY29kZSBjb2RlOjogJHtKU09OLnN0cmluZ2lmeShyZXN1bHQuY29kZV9wb2ludHMpfSBcbiAgICAgICAgdG8gdXRmODo6ICR7SlNPTi5zdHJpbmdpZnkodXRmOCl9IFxuICAgICAgICB3aWxsIGJldHdlZW4gJHttaW59IGFuZCAke21heH1gLCAoKSA9PiB7XG4gICAgICB1dGY4LmZvckVhY2gobiA9PiBvayhuID49IG1pbiAmJiBuIDwgbWF4KSlcbiAgICB9KVxuICB9KVxuICBcbiAgZGVzY3JpYmUoJy5zdHJpbmdfdG9fdXRmOF91aW50OCcsICgpID0+IHtcbiAgICBjb25zdCBtaW4gPSAwLCBtYXggPSAwYjExMTExMTExXG4gICAgXG4gICAgbGV0IHJlc3VsdCA9IGdldFN0cmluZyhFQ09ERUlORy5VTklDT0RFKVxuICAgIGxldCB1dGY4X2NvZGUgPSBVVEY4UGFyc2VyLnN0cmluZ190b191dGY4X3VpbnQ4KHJlc3VsdC5zdHJpbmcpXG4gICAgbGV0IGFycmF5ID0gdHlwZUFycmF5VG9BcnJheSh1dGY4X2NvZGUpXG4gICAgbGV0IHBhcnNlciA9IG5ldyBVVEY4UGFyc2VyKClcbiAgICAvLyDkuI3lv73nlaVCT01cbiAgICBwYXJzZXIuYnl0ZXMgPSAzXG4gICAgbGV0IHBhcnNlX2FycmF5ID0gcGFyc2VyLmVudHJ5KHV0ZjhfY29kZSkuY2hhcmFjdGVyXG4gICAgbGV0IHBhcnNlX3N0cmluZyA9IHRvU3RyaW5nKHBhcnNlX2FycmF5KVxuICAgIFxuICAgIGl0KGBjb2RlOjogJHtyZXN1bHQuY29kZV9wb2ludHN9XG4gICAgICAgIHRvIHN0cmluZzo6ICR7cmVzdWx0LnN0cmluZ30gXG4gICAgICAgIHRvIHV0ZjggY29kZTo6ICR7SlNPTi5zdHJpbmdpZnkoYXJyYXkpfSBcbiAgICAgICAgd2lsbCBiZXR3ZWVuICR7bWlufSBhbmQgJHttYXh9LiB0aGVuIHRoZSBcbiAgICAgICAgY29kZTo6JHtKU09OLnN0cmluZ2lmeShwYXJzZV9hcnJheSl9IFxuICAgICAgICBjYW4gdG8gYmVcbiAgICAgICAgc3RyaW5nOjogJHtwYXJzZV9zdHJpbmd9IHRoYXQgZXF1YWxcbiAgICAgICAgb3JpZ2luYWwgc3RyaW5nOjogJHtyZXN1bHQuc3RyaW5nfWAsICgpID0+IHtcbiAgXG4gICAgICBhcnJheS5mb3JFYWNoKG4gPT4gb2sobiA+PSBtaW4gJiYgbiA8IG1heCkpXG4gICAgICBlcXVhbChwYXJzZV9zdHJpbmcsIHJlc3VsdC5zdHJpbmcpXG4gICAgfSlcbiAgfSlcbn0pXG5cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3Rlc3QvbW9jaGEvcGFyc2VyL3V0ZjgudGVzdC5qcyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar _assert = __webpack_require__(18);\n\nvar _base = __webpack_require__(26);\n\nvar _utf = __webpack_require__(11);\n\nvar _util = __webpack_require__(23);\n\n/**\n * Created by coin on 05/01/2017.\n */\n\ndescribe('Base64Parer', function () {\n  describe('.encode', function () {\n    var parser = new _base.Base64Parser();\n    var codes = parser.code + '=';\n    describe('#ascii code', function () {\n      var result = (0, _util.getString)(_util.ECODEING.ASCII);\n      var utf8_code = _utf.UTF8Parser.unicode_to_utf8_uint8(result.code_points);\n      var array = utf8_code.reduce(function (p, c) {\n        return p.concat(c);\n      }, []);\n      var code = parser.encode(utf8_code);\n\n      it('string ::\\n          ' + result.string + '\\n          base64 code:: \\n          ' + code + '\\n          to utf8:: \\n          ' + JSON.stringify(array) + '\\n          all in ::\\n          ' + codes + ' ', function () {\n        for (var i = 0; i < code.length; i++) {\n          (0, _assert.ok)(codes.indexOf(code[i]) !== -1);\n        }\n      });\n    });\n\n    describe('#unicode code', function () {\n      var result = (0, _util.getString)(_util.ECODEING.UNICODE);\n      var utf8_code = _utf.UTF8Parser.unicode_to_utf8_uint8(result.code_points);\n      var array = utf8_code.reduce(function (p, c) {\n        return p.concat(c);\n      }, []);\n      var code = parser.encode(utf8_code);\n\n      it('string ::\\n          ' + result.string + '\\n          base64 code:: \\n          ' + code + '\\n          to utf8:: \\n          ' + JSON.stringify(array) + '\\n          all in ::\\n          ' + codes, function () {\n        for (var i = 0; i < code.length; i++) {\n          (0, _assert.ok)(codes.indexOf(code[i]) !== -1);\n        }\n      });\n    });\n  });\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi90ZXN0L21vY2hhL3BhcnNlci9iYXNlNjQudGVzdC5qcz85NjZkIl0sIm5hbWVzIjpbImRlc2NyaWJlIiwicGFyc2VyIiwiY29kZXMiLCJjb2RlIiwicmVzdWx0IiwiQVNDSUkiLCJ1dGY4X2NvZGUiLCJ1bmljb2RlX3RvX3V0ZjhfdWludDgiLCJjb2RlX3BvaW50cyIsImFycmF5IiwicmVkdWNlIiwicCIsImMiLCJjb25jYXQiLCJlbmNvZGUiLCJpdCIsInN0cmluZyIsIkpTT04iLCJzdHJpbmdpZnkiLCJpIiwibGVuZ3RoIiwiaW5kZXhPZiIsIlVOSUNPREUiXSwibWFwcGluZ3MiOiI7O0FBSUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBUEE7Ozs7QUFTQUEsU0FBUyxhQUFULEVBQXdCLFlBQU07QUFDNUJBLFdBQVMsU0FBVCxFQUFvQixZQUFNO0FBQ3hCLFFBQU1DLFNBQVMsd0JBQWY7QUFDQSxRQUFNQyxRQUFRRCxPQUFPRSxJQUFQLEdBQWMsR0FBNUI7QUFDQUgsYUFBUyxhQUFULEVBQXdCLFlBQU07QUFDNUIsVUFBSUksU0FBUyxxQkFBVSxlQUFTQyxLQUFuQixDQUFiO0FBQ0EsVUFBSUMsWUFBWSxnQkFBV0MscUJBQVgsQ0FBaUNILE9BQU9JLFdBQXhDLENBQWhCO0FBQ0EsVUFBSUMsUUFBUUgsVUFBVUksTUFBVixDQUFpQixVQUFDQyxDQUFELEVBQUlDLENBQUo7QUFBQSxlQUFVRCxFQUFFRSxNQUFGLENBQVNELENBQVQsQ0FBVjtBQUFBLE9BQWpCLEVBQXdDLEVBQXhDLENBQVo7QUFDQSxVQUFJVCxPQUFPRixPQUFPYSxNQUFQLENBQWNSLFNBQWQsQ0FBWDs7QUFFQVMsbUNBQ01YLE9BQU9ZLE1BRGIsOENBR01iLElBSE4sMENBS01jLEtBQUtDLFNBQUwsQ0FBZVQsS0FBZixDQUxOLHlDQU9NUCxLQVBOLFFBT2dCLFlBQU07QUFDcEIsYUFBSyxJQUFJaUIsSUFBSSxDQUFiLEVBQWdCQSxJQUFJaEIsS0FBS2lCLE1BQXpCLEVBQWlDRCxHQUFqQyxFQUFzQztBQUNwQywwQkFBR2pCLE1BQU1tQixPQUFOLENBQWNsQixLQUFLZ0IsQ0FBTCxDQUFkLE1BQTJCLENBQUMsQ0FBL0I7QUFDRDtBQUNGLE9BWEQ7QUFZRCxLQWxCRDs7QUFvQkFuQixhQUFTLGVBQVQsRUFBMEIsWUFBTTtBQUM5QixVQUFJSSxTQUFTLHFCQUFVLGVBQVNrQixPQUFuQixDQUFiO0FBQ0EsVUFBSWhCLFlBQVksZ0JBQVdDLHFCQUFYLENBQWlDSCxPQUFPSSxXQUF4QyxDQUFoQjtBQUNBLFVBQUlDLFFBQVFILFVBQVVJLE1BQVYsQ0FBaUIsVUFBQ0MsQ0FBRCxFQUFJQyxDQUFKO0FBQUEsZUFBVUQsRUFBRUUsTUFBRixDQUFTRCxDQUFULENBQVY7QUFBQSxPQUFqQixFQUF3QyxFQUF4QyxDQUFaO0FBQ0EsVUFBSVQsT0FBT0YsT0FBT2EsTUFBUCxDQUFjUixTQUFkLENBQVg7O0FBRUFTLG1DQUNNWCxPQUFPWSxNQURiLDhDQUdNYixJQUhOLDBDQUtNYyxLQUFLQyxTQUFMLENBQWVULEtBQWYsQ0FMTix5Q0FPTVAsS0FQTixFQU9lLFlBQU07QUFDbkIsYUFBSyxJQUFJaUIsSUFBSSxDQUFiLEVBQWdCQSxJQUFJaEIsS0FBS2lCLE1BQXpCLEVBQWlDRCxHQUFqQyxFQUFzQztBQUNwQywwQkFBR2pCLE1BQU1tQixPQUFOLENBQWNsQixLQUFLZ0IsQ0FBTCxDQUFkLE1BQTJCLENBQUMsQ0FBL0I7QUFDRDtBQUNGLE9BWEQ7QUFZRCxLQWxCRDtBQW9CRCxHQTNDRDtBQTRDRCxDQTdDRCIsImZpbGUiOiIyNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlZCBieSBjb2luIG9uIDA1LzAxLzIwMTcuXG4gKi9cblxuaW1wb3J0IHsgb2sgfSBmcm9tICdhc3NlcnQnXG5pbXBvcnQgeyBCYXNlNjRQYXJzZXIgfSBmcm9tICcuLi8uLi8uLi9zcmMvcGFyc2VyL2Jhc2U2NCdcbmltcG9ydCB7IFVURjhQYXJzZXIgfSBmcm9tICcuLi8uLi8uLi9zcmMvcGFyc2VyL3V0ZjgnXG5pbXBvcnQgeyBnZXRTdHJpbmcsIEVDT0RFSU5HIH0gZnJvbSAnLi91dGlsJ1xuXG5kZXNjcmliZSgnQmFzZTY0UGFyZXInLCAoKSA9PiB7XG4gIGRlc2NyaWJlKCcuZW5jb2RlJywgKCkgPT4ge1xuICAgIGNvbnN0IHBhcnNlciA9IG5ldyBCYXNlNjRQYXJzZXIoKVxuICAgIGNvbnN0IGNvZGVzID0gcGFyc2VyLmNvZGUgKyAnPSdcbiAgICBkZXNjcmliZSgnI2FzY2lpIGNvZGUnLCAoKSA9PiB7XG4gICAgICBsZXQgcmVzdWx0ID0gZ2V0U3RyaW5nKEVDT0RFSU5HLkFTQ0lJKVxuICAgICAgbGV0IHV0ZjhfY29kZSA9IFVURjhQYXJzZXIudW5pY29kZV90b191dGY4X3VpbnQ4KHJlc3VsdC5jb2RlX3BvaW50cylcbiAgICAgIGxldCBhcnJheSA9IHV0ZjhfY29kZS5yZWR1Y2UoKHAsIGMpID0+IHAuY29uY2F0KGMpLCBbXSlcbiAgICAgIGxldCBjb2RlID0gcGFyc2VyLmVuY29kZSh1dGY4X2NvZGUpXG4gICAgICBcbiAgICAgIGl0KGBzdHJpbmcgOjpcbiAgICAgICAgICAke3Jlc3VsdC5zdHJpbmd9XG4gICAgICAgICAgYmFzZTY0IGNvZGU6OiBcbiAgICAgICAgICAke2NvZGV9XG4gICAgICAgICAgdG8gdXRmODo6IFxuICAgICAgICAgICR7SlNPTi5zdHJpbmdpZnkoYXJyYXkpfVxuICAgICAgICAgIGFsbCBpbiA6OlxuICAgICAgICAgICR7Y29kZXN9IGAsICgpID0+IHtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb2RlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgb2soY29kZXMuaW5kZXhPZihjb2RlW2ldKSAhPT0gLTEpXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfSlcbiAgICBcbiAgICBkZXNjcmliZSgnI3VuaWNvZGUgY29kZScsICgpID0+IHtcbiAgICAgIGxldCByZXN1bHQgPSBnZXRTdHJpbmcoRUNPREVJTkcuVU5JQ09ERSlcbiAgICAgIGxldCB1dGY4X2NvZGUgPSBVVEY4UGFyc2VyLnVuaWNvZGVfdG9fdXRmOF91aW50OChyZXN1bHQuY29kZV9wb2ludHMpXG4gICAgICBsZXQgYXJyYXkgPSB1dGY4X2NvZGUucmVkdWNlKChwLCBjKSA9PiBwLmNvbmNhdChjKSwgW10pXG4gICAgICBsZXQgY29kZSA9IHBhcnNlci5lbmNvZGUodXRmOF9jb2RlKVxuICAgICAgXG4gICAgICBpdChgc3RyaW5nIDo6XG4gICAgICAgICAgJHtyZXN1bHQuc3RyaW5nfVxuICAgICAgICAgIGJhc2U2NCBjb2RlOjogXG4gICAgICAgICAgJHtjb2RlfVxuICAgICAgICAgIHRvIHV0Zjg6OiBcbiAgICAgICAgICAke0pTT04uc3RyaW5naWZ5KGFycmF5KX1cbiAgICAgICAgICBhbGwgaW4gOjpcbiAgICAgICAgICAke2NvZGVzfWAsICgpID0+IHtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb2RlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgb2soY29kZXMuaW5kZXhPZihjb2RlW2ldKSAhPT0gLTEpXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfSlcbiAgICBcbiAgfSlcbn0pXG5cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3Rlc3QvbW9jaGEvcGFyc2VyL2Jhc2U2NC50ZXN0LmpzIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 26 */
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Created by coin on 03/01/2017.\n * https://zh.wikipedia.org/wiki/Base64\n */\n\nvar Base64Parser = exports.Base64Parser = function () {\n  function Base64Parser() {\n    _classCallCheck(this, Base64Parser);\n\n    this.code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  }\n\n  /**\n   * @param {Uint8Array} buffer\n   * @return {string}\n   */\n\n\n  _createClass(Base64Parser, [{\n    key: 'encode',\n    value: function encode(buffer) {\n      var len = buffer.byteLength;\n      var padding = len % 3;\n      var end = len - padding;\n      var code = this.code;\n      var result = [];\n\n      var buf = 0;\n      var point = 0;\n      var f = void 0,\n          s = void 0,\n          t = void 0;\n\n      while (point < end) {\n        // 24 bit\n        f = buffer[point++] << 16;\n        s = buffer[point++] << 8;\n        t = buffer[point++];\n\n        buf = f + s + t;\n\n        // 6 bit\n        // 0x3F === 0b111111\n        result.push(code[buf >> 18 & 0x3F], code[buf >> 12 & 0x3F], code[buf >> 6 & 0x3F], code[buf & 0x3F]);\n\n        buf = 0;\n      }\n\n      if (padding === 2) {\n        // 16 bit\n        f = buffer[point++] << 8;\n        s = buffer[point];\n\n        buf = f + s;\n        result.push(code[buf >> 10 & 0x3F], code[buf >> 4 & 0x3F], code[buf << 2 & 0x3F], '=');\n      }\n\n      if (padding === 1) {\n        // 8 bit\n        buf = buffer[point];\n        result.push(code[buf >> 2], code[buf << 4 & 0x3F], '==');\n      }\n\n      return result.join('');\n    }\n  }]);\n\n  return Base64Parser;\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcGFyc2VyL2Jhc2U2NC5qcz8yZDg1Il0sIm5hbWVzIjpbIkJhc2U2NFBhcnNlciIsImNvZGUiLCJidWZmZXIiLCJsZW4iLCJieXRlTGVuZ3RoIiwicGFkZGluZyIsImVuZCIsInJlc3VsdCIsImJ1ZiIsInBvaW50IiwiZiIsInMiLCJ0IiwicHVzaCIsImpvaW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7Ozs7SUFLYUEsWSxXQUFBQSxZO0FBQ1gsMEJBQWU7QUFBQTs7QUFDYixTQUFLQyxJQUFMLEdBQVksa0VBQVo7QUFDRDs7QUFFRDs7Ozs7Ozs7MkJBSVFDLE0sRUFBUTtBQUNkLFVBQU1DLE1BQU1ELE9BQU9FLFVBQW5CO0FBQ0EsVUFBTUMsVUFBVUYsTUFBTSxDQUF0QjtBQUNBLFVBQU1HLE1BQU1ILE1BQU1FLE9BQWxCO0FBQ0EsVUFBTUosT0FBTyxLQUFLQSxJQUFsQjtBQUNBLFVBQU1NLFNBQVMsRUFBZjs7QUFFQSxVQUFJQyxNQUFNLENBQVY7QUFDQSxVQUFJQyxRQUFRLENBQVo7QUFDQSxVQUFJQyxVQUFKO0FBQUEsVUFBT0MsVUFBUDtBQUFBLFVBQVVDLFVBQVY7O0FBRUEsYUFBT0gsUUFBUUgsR0FBZixFQUFvQjtBQUNsQjtBQUNBSSxZQUFJUixPQUFPTyxPQUFQLEtBQW1CLEVBQXZCO0FBQ0FFLFlBQUlULE9BQU9PLE9BQVAsS0FBbUIsQ0FBdkI7QUFDQUcsWUFBSVYsT0FBT08sT0FBUCxDQUFKOztBQUVBRCxjQUFNRSxJQUFJQyxDQUFKLEdBQVFDLENBQWQ7O0FBRUE7QUFDQTtBQUNBTCxlQUFPTSxJQUFQLENBQ0VaLEtBQUtPLE9BQU8sRUFBUCxHQUFZLElBQWpCLENBREYsRUFFRVAsS0FBS08sT0FBTyxFQUFQLEdBQVksSUFBakIsQ0FGRixFQUdFUCxLQUFLTyxPQUFPLENBQVAsR0FBVyxJQUFoQixDQUhGLEVBSUVQLEtBQUtPLE1BQU0sSUFBWCxDQUpGOztBQU9BQSxjQUFNLENBQU47QUFDRDs7QUFFRCxVQUFJSCxZQUFZLENBQWhCLEVBQW1CO0FBQ2pCO0FBQ0FLLFlBQUlSLE9BQU9PLE9BQVAsS0FBbUIsQ0FBdkI7QUFDQUUsWUFBSVQsT0FBT08sS0FBUCxDQUFKOztBQUVBRCxjQUFNRSxJQUFJQyxDQUFWO0FBQ0FKLGVBQU9NLElBQVAsQ0FDRVosS0FBS08sT0FBTyxFQUFQLEdBQVksSUFBakIsQ0FERixFQUVFUCxLQUFLTyxPQUFPLENBQVAsR0FBVyxJQUFoQixDQUZGLEVBR0VQLEtBQUtPLE9BQU8sQ0FBUCxHQUFXLElBQWhCLENBSEYsRUFJRSxHQUpGO0FBTUQ7O0FBRUQsVUFBSUgsWUFBWSxDQUFoQixFQUFtQjtBQUNqQjtBQUNBRyxjQUFNTixPQUFPTyxLQUFQLENBQU47QUFDQUYsZUFBT00sSUFBUCxDQUFZWixLQUFLTyxPQUFPLENBQVosQ0FBWixFQUE0QlAsS0FBS08sT0FBTyxDQUFQLEdBQVcsSUFBaEIsQ0FBNUIsRUFBbUQsSUFBbkQ7QUFDRDs7QUFFRCxhQUFPRCxPQUFPTyxJQUFQLENBQVksRUFBWixDQUFQO0FBQ0QiLCJmaWxlIjoiMjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZWQgYnkgY29pbiBvbiAwMy8wMS8yMDE3LlxuICogaHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvQmFzZTY0XG4gKi9cblxuZXhwb3J0IGNsYXNzIEJhc2U2NFBhcnNlciB7XG4gIGNvbnN0cnVjdG9yICgpIHtcbiAgICB0aGlzLmNvZGUgPSAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLydcbiAgfVxuICBcbiAgLyoqXG4gICAqIEBwYXJhbSB7VWludDhBcnJheX0gYnVmZmVyXG4gICAqIEByZXR1cm4ge3N0cmluZ31cbiAgICovXG4gIGVuY29kZSAoYnVmZmVyKSB7XG4gICAgY29uc3QgbGVuID0gYnVmZmVyLmJ5dGVMZW5ndGhcbiAgICBjb25zdCBwYWRkaW5nID0gbGVuICUgM1xuICAgIGNvbnN0IGVuZCA9IGxlbiAtIHBhZGRpbmdcbiAgICBjb25zdCBjb2RlID0gdGhpcy5jb2RlXG4gICAgY29uc3QgcmVzdWx0ID0gW11cbiAgICBcbiAgICBsZXQgYnVmID0gMFxuICAgIGxldCBwb2ludCA9IDBcbiAgICBsZXQgZiwgcywgdFxuICAgIFxuICAgIHdoaWxlIChwb2ludCA8IGVuZCkge1xuICAgICAgLy8gMjQgYml0XG4gICAgICBmID0gYnVmZmVyW3BvaW50KytdIDw8IDE2XG4gICAgICBzID0gYnVmZmVyW3BvaW50KytdIDw8IDhcbiAgICAgIHQgPSBidWZmZXJbcG9pbnQrK11cbiAgICAgIFxuICAgICAgYnVmID0gZiArIHMgKyB0XG4gICAgICBcbiAgICAgIC8vIDYgYml0XG4gICAgICAvLyAweDNGID09PSAwYjExMTExMVxuICAgICAgcmVzdWx0LnB1c2goXG4gICAgICAgIGNvZGVbYnVmID4+IDE4ICYgMHgzRl0sXG4gICAgICAgIGNvZGVbYnVmID4+IDEyICYgMHgzRl0sXG4gICAgICAgIGNvZGVbYnVmID4+IDYgJiAweDNGXSxcbiAgICAgICAgY29kZVtidWYgJiAweDNGXVxuICAgICAgKVxuICAgICAgXG4gICAgICBidWYgPSAwXG4gICAgfVxuICAgIFxuICAgIGlmIChwYWRkaW5nID09PSAyKSB7XG4gICAgICAvLyAxNiBiaXRcbiAgICAgIGYgPSBidWZmZXJbcG9pbnQrK10gPDwgOFxuICAgICAgcyA9IGJ1ZmZlcltwb2ludF1cbiAgICAgIFxuICAgICAgYnVmID0gZiArIHNcbiAgICAgIHJlc3VsdC5wdXNoKFxuICAgICAgICBjb2RlW2J1ZiA+PiAxMCAmIDB4M0ZdLFxuICAgICAgICBjb2RlW2J1ZiA+PiA0ICYgMHgzRl0sXG4gICAgICAgIGNvZGVbYnVmIDw8IDIgJiAweDNGXSxcbiAgICAgICAgJz0nXG4gICAgICApXG4gICAgfVxuICAgIFxuICAgIGlmIChwYWRkaW5nID09PSAxKSB7XG4gICAgICAvLyA4IGJpdFxuICAgICAgYnVmID0gYnVmZmVyW3BvaW50XVxuICAgICAgcmVzdWx0LnB1c2goY29kZVtidWYgPj4gMl0sIGNvZGVbYnVmIDw8IDQgJiAweDNGXSwgJz09JylcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIHJlc3VsdC5qb2luKCcnKVxuICB9XG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL3BhcnNlci9iYXNlNjQuanMiXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar _assert = __webpack_require__(18);\n\nvar _csv = __webpack_require__(10);\n\nvar _utf = __webpack_require__(11);\n\nvar _util = __webpack_require__(23);\n\n/**\n * Created by coin on 05/01/2017.\n */\n\ndescribe('CSVParser', function () {\n  describe('.parse_line', function () {\n    describe('#ascii code', function () {\n      var parser = new _utf.UTF8Parser();\n      var cvs_parser = new _csv.CSVParser();\n      var result = (0, _util.getString)(_util.ECODEING.ASCII);\n      result.code_points = result.code_points.filter(function (code) {\n        return code !== 34;\n      });\n      result.string = result.string.replace(/\"/g, '');\n      var list = result.code_points.map(function (p) {\n        return (0, _util.toString)([p]);\n      });\n      var string = list.join(',');\n      var utf8 = _utf.UTF8Parser.string_to_utf8_uint8(string);\n      var length = result.code_points.length;\n      var line = cvs_parser.parse_line(utf8);\n      var line_string = (0, _util.typeArrayToArray)(line).map(function (array) {\n        return (0, _util.toString)(parser.entry(array).character);\n      });\n\n      it('string code::\\n          ' + JSON.stringify(result.code_points) + '\\n          string:: \\n          ' + result.string + ' \\n          to csv string::\\n          ' + string + '\\n          to utf8::\\n          ' + JSON.stringify((0, _util.typeArrayToArray)(utf8)) + '\\n          to csv line::\\n          ' + JSON.stringify((0, _util.typeArrayToArray)(line).map(function (array) {\n        return (0, _util.typeArrayToArray)(array);\n      })) + '\\n          get lines::\\n          ' + JSON.stringify(line_string) + ' length equal csv string length', function () {\n        (0, _assert.equal)(line_string.length, line.length);\n      });\n    });\n\n    describe('#unicode code', function () {\n      var parser = new _utf.UTF8Parser();\n      var cvs_parser = new _csv.CSVParser();\n      var result = (0, _util.getString)(_util.ECODEING.UNICODE);\n      result.code_points = result.code_points.filter(function (code) {\n        return code !== 34;\n      });\n      result.string = result.string.replace(/\"/g, '');\n      var list = result.code_points.map(function (p) {\n        return (0, _util.toString)([p]);\n      });\n      var string = list.join(',');\n      var utf8 = _utf.UTF8Parser.string_to_utf8_uint8(string);\n      var length = result.code_points.length;\n      var line = cvs_parser.parse_line(utf8);\n      var line_string = (0, _util.typeArrayToArray)(line).map(function (array) {\n        return (0, _util.toString)(parser.entry(array).character);\n      });\n\n      it('string code::\\n          ' + JSON.stringify(result.code_points) + '\\n          string:: \\n          ' + result.string + ' \\n          to csv string::\\n          ' + string + '\\n          to utf8::\\n          ' + JSON.stringify((0, _util.typeArrayToArray)(utf8)) + '\\n          to csv line::\\n          ' + JSON.stringify((0, _util.typeArrayToArray)(line).map(function (array) {\n        return (0, _util.typeArrayToArray)(array);\n      })) + '\\n          get lines::\\n          ' + JSON.stringify(line_string) + ' length equal csv string length', function () {\n        (0, _assert.equal)(line_string.length, line.length);\n      });\n    });\n\n    describe('#empty element', function () {\n      var cvs_parser = new _csv.CSVParser();\n      var array = new Array(10).fill(0x2C);\n      var code = cvs_parser.parse_line(new Uint8Array(array));\n      it('empty array::\\n        ' + JSON.stringify(array) + '\\n        toString::\\n        ' + (0, _util.toString)(array) + '\\n        parse to base64 line::\\n        ' + JSON.stringify(code) + '\\n        length will equal array.length + 1', function () {\n        (0, _assert.equal)(code.length, array.length + 1);\n      });\n    });\n  });\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }
/******/ ]);